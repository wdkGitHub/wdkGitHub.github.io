<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>行走在0与1之间</title>
  
  <subtitle>浮生若梦，世事无常，独醉梦一场</subtitle>
  <link href="https://blog.dekun.wang/atom.xml" rel="self"/>
  
  <link href="https://blog.dekun.wang/"/>
  <updated>2023-12-25T06:26:33.028Z</updated>
  <id>https://blog.dekun.wang/</id>
  
  <author>
    <name>Wang Dekun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 配置 daemon.json hosts参数导致Docker服务启动失败</title>
    <link href="https://blog.dekun.wang/blog/87ee8686.html"/>
    <id>https://blog.dekun.wang/blog/87ee8686.html</id>
    <published>2023-12-25T05:38:11.000Z</published>
    <updated>2023-12-25T06:26:33.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux-配置-daemon-json-hosts参数导致Docker服务启动失败"><a href="#Linux-配置-daemon-json-hosts参数导致Docker服务启动失败" class="headerlink" title="Linux 配置 daemon.json hosts参数导致Docker服务启动失败"></a>Linux 配置 daemon.json hosts参数导致Docker服务启动失败</h2><h3 id="TCP访问，第一种配置方式"><a href="#TCP访问，第一种配置方式" class="headerlink" title="TCP访问，第一种配置方式"></a>TCP访问，第一种配置方式</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@bogon docker]# tree <span class="hljs-regexp">/etc/</span>docker/<br><span class="hljs-regexp">/etc/</span>docker/<br>└── daemon.json<br><br># 配置  daemon.json <br><br>[root@bogon docker]# cat daemon.json<br>&#123;<br>  <span class="hljs-string">&quot;insecure-registries&quot;</span> : [<br>    <span class="hljs-string">&quot;192.168.10.25:8082&quot;</span> # 私有docker hub，http方式访问<br>  ],<br>  <span class="hljs-string">&quot;hosts&quot;</span> : [<br>    <span class="hljs-string">&quot;unix:\/\/\/var\/run\/docker.sock&quot;</span>,<br>    <span class="hljs-string">&quot;tcp:\/\/0.0.0.0:2375&quot;</span><br>  ],<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span> : [<br>    <span class="hljs-string">&quot;https:\/\/docker.mirrors.ustc.edu.cn&quot;</span>,<br>    <span class="hljs-string">&quot;https:\/\/hub-mirror.c.163.com&quot;</span><br>  ]<br>&#125;<br><br># 如果  systemctl start docker 无法启动 <br>- 首先检查 daemon.json  配置是否正确<br>- 检查 <span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/systemd/</span>system/docker.service 文件 是否含有如下配置<br>  <br><br>#ExecStart=<span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/dockerd -H fd:/</span><span class="hljs-regexp">/ --containerd=/</span>run<span class="hljs-regexp">/containerd/</span>containerd.sock #注释此行<br>ExecStart=<span class="hljs-regexp">/usr/</span>bin/dockerd       # 使用此配置，再次启动docker服务<br><br>   <br></code></pre></td></tr></table></figure><blockquote><p>Docker 服务配置信息 <code>/usr/lib/systemd/system/docker.service</code></p></blockquote><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/docker/daemon-hosts/image-20231225135053800.png" alt="docker.service"></p><h3 id="TCP访问，-第二种-配置TCP访问-（不推荐，容易坑人）"><a href="#TCP访问，-第二种-配置TCP访问-（不推荐，容易坑人）" class="headerlink" title="TCP访问， 第二种 配置TCP访问 （不推荐，容易坑人）"></a>TCP访问， 第二种 配置TCP访问 （不推荐，容易坑人）</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"> # 获取删除 daemon.json 中的hosts配置<br> # <span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/systemd/</span>system/docker.service 使用  -H <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">2375</span>   配置TCP访问<br>    <br>ExecStart=<span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/dockerd -H fd:/</span><span class="hljs-regexp">/ --containerd=/</span>run<span class="hljs-regexp">/containerd/</span>containerd.sock -H <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">2375</span>  <br>    <br></code></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><blockquote><p>如果还不能访问，检查防火墙状态。</p></blockquote><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/docker/daemon-hosts/image-20231225140708315.png" alt="Docker version信息"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Linux-配置-daemon-json-hosts参数导致Docker服务启动失败&quot;&gt;&lt;a href=&quot;#Linux-配置-daemon-json-hosts参数导致Docker服务启动失败&quot; class=&quot;headerlink&quot; title=&quot;Linux 配置</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.dekun.wang/categories/Linux/"/>
    
    <category term="Docker" scheme="https://blog.dekun.wang/categories/Linux/Docker/"/>
    
    
    <category term="Docker" scheme="https://blog.dekun.wang/tags/Docker/"/>
    
    <category term="Linux" scheme="https://blog.dekun.wang/tags/Linux/"/>
    
    <category term="Daemon.json" scheme="https://blog.dekun.wang/tags/Daemon-json/"/>
    
  </entry>
  
  <entry>
    <title>Linux xfs格式的 /home 磁盘压缩分配给 /</title>
    <link href="https://blog.dekun.wang/blog/7afb52be.html"/>
    <id>https://blog.dekun.wang/blog/7afb52be.html</id>
    <published>2023-12-22T09:49:44.000Z</published>
    <updated>2023-12-25T05:41:05.317Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-xfs格式的-home-磁盘压缩分配给"><a href="#Linux-xfs格式的-home-磁盘压缩分配给" class="headerlink" title="Linux xfs格式的 /home 磁盘压缩分配给 /"></a>Linux xfs格式的 <code>/home </code>磁盘压缩分配给 <code>/</code></h1><ul><li><p>查看磁盘情况</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@bogon ~]<span class="hljs-comment"># df -h</span><br>文件系统                          容量  已用  可用 已用% 挂载点<br>devtmpfs                          <span class="hljs-number">4.0</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">4.0</span>M    <span class="hljs-number">0</span>% /dev<br>tmpfs                             <span class="hljs-number">3.7</span>G     <span class="hljs-number">0</span>  <span class="hljs-number">3.7</span>G    <span class="hljs-number">0</span>% <span class="hljs-regexp">/dev/</span>shm<br>tmpfs                             <span class="hljs-number">1.5</span>G  <span class="hljs-number">9.8</span>M  <span class="hljs-number">1.5</span>G    <span class="hljs-number">1</span>% /run<br><span class="hljs-regexp">/dev/m</span>apper<span class="hljs-regexp">/almalinux_bogon-root   70G  6.6G   64G   10% /</span><br><span class="hljs-regexp">/dev/</span>sda1                        <span class="hljs-number">1014</span>M  <span class="hljs-number">418</span>M  <span class="hljs-number">597</span>M   <span class="hljs-number">42</span>% /boot<br>tmpfs                             <span class="hljs-number">756</span>M   <span class="hljs-number">92</span>K  <span class="hljs-number">756</span>M    <span class="hljs-number">1</span>% <span class="hljs-regexp">/run/u</span>ser/<span class="hljs-number">0</span><br>overlay                            <span class="hljs-number">70</span>G  <span class="hljs-number">6.6</span>G   <span class="hljs-number">64</span>G   <span class="hljs-number">10</span>% <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/docker/</span>overlay2<span class="hljs-regexp">/5350a4d719574d0eb7a5fb79e75aa930b34314feb2e119380e72cc8d2fbbf315/m</span>erged<br><span class="hljs-regexp">/dev/m</span>apper<span class="hljs-regexp">/almalinux_bogon-home  853G  6.0G  847G    1% /</span>home<br></code></pre></td></tr></table></figure></li><li><p>备份 <code>/home</code></p><blockquote><p>自行备份目录下文件</p></blockquote></li><li><p>卸载 <code>/home</code>挂载点</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@bogon ~]<span class="hljs-comment"># umount -v /home</span><br>umount: /home 未挂载<br>[root@bogon ~]<span class="hljs-comment"># df -h</span><br>文件系统                          容量  已用  可用 已用% 挂载点<br>devtmpfs                          <span class="hljs-number">4.0</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">4.0</span>M    <span class="hljs-number">0</span>% /dev<br>tmpfs                             <span class="hljs-number">3.7</span>G     <span class="hljs-number">0</span>  <span class="hljs-number">3.7</span>G    <span class="hljs-number">0</span>% <span class="hljs-regexp">/dev/</span>shm<br>tmpfs                             <span class="hljs-number">1.5</span>G  <span class="hljs-number">9.8</span>M  <span class="hljs-number">1.5</span>G    <span class="hljs-number">1</span>% /run<br><span class="hljs-regexp">/dev/m</span>apper<span class="hljs-regexp">/almalinux_bogon-root   70G  6.6G   64G   10% /</span><br><span class="hljs-regexp">/dev/</span>sda1                        <span class="hljs-number">1014</span>M  <span class="hljs-number">418</span>M  <span class="hljs-number">597</span>M   <span class="hljs-number">42</span>% /boot<br>tmpfs                             <span class="hljs-number">756</span>M   <span class="hljs-number">92</span>K  <span class="hljs-number">756</span>M    <span class="hljs-number">1</span>% <span class="hljs-regexp">/run/u</span>ser/<span class="hljs-number">0</span><br>overlay                            <span class="hljs-number">70</span>G  <span class="hljs-number">6.6</span>G   <span class="hljs-number">64</span>G   <span class="hljs-number">10</span>% <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/docker/</span>overlay2<span class="hljs-regexp">/5350a4d719574d0eb7a5fb79e75aa930b34314feb2e119380e72cc8d2fbbf315/m</span>erged<br></code></pre></td></tr></table></figure></li><li><p>删除 挂载 <code>\home</code> 的 <code>/dev/mapper/almalinux_bogon-home</code> </p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">[root@bogon ~]<span class="hljs-comment"># lvremove /dev/mapper/almalinux_bogon-home</span><br>Do you really want to remove active logical <span class="hljs-keyword">volume</span><span class="language-bash"> almalinux_bogon/home? [y/n]: y</span><br>  Logical <span class="hljs-keyword">volume</span><span class="language-bash"> <span class="hljs-string">&quot;home&quot;</span> successfully removed.</span><br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@bogon ~]# lvdisplay<br>  <span class="hljs-comment">--- Logical volume ---</span><br>  LV <span class="hljs-type">Path</span>                /dev/almalinux_bogon/swap<br>  LV <span class="hljs-type">Name</span>                swap<br>  VG <span class="hljs-type">Name</span>                almalinux_bogon<br>  LV <span class="hljs-type">UUID</span>                k3WZ81-oxNS-KJ9J-UVLx-sUX8-bqDd<span class="hljs-number">-0</span>iPinl<br>  LV <span class="hljs-keyword">Write</span> <span class="hljs-keyword">Access</span>        <span class="hljs-keyword">read</span>/<span class="hljs-keyword">write</span><br>  LV Creation host, <span class="hljs-type">time</span> bogon, <span class="hljs-number">2023</span><span class="hljs-number">-12</span><span class="hljs-number">-22</span> <span class="hljs-number">14</span>:<span class="hljs-number">20</span>:<span class="hljs-number">48</span> +<span class="hljs-number">0800</span><br>  LV Status              available<br>  # <span class="hljs-keyword">open</span>                 <span class="hljs-number">2</span><br>  LV Size                &lt;<span class="hljs-number">7.77</span> GiB<br>  <span class="hljs-keyword">Current</span> LE             <span class="hljs-number">1989</span><br>  Segments               <span class="hljs-number">1</span><br>  Allocation             <span class="hljs-keyword">inherit</span><br>  <span class="hljs-keyword">Read</span> ahead sectors     auto<br>  - currently <span class="hljs-keyword">set</span> <span class="hljs-keyword">to</span>     <span class="hljs-number">256</span><br>  Block device           <span class="hljs-number">253</span>:<span class="hljs-number">1</span><br><br>  <span class="hljs-comment">--- Logical volume ---</span><br>  LV <span class="hljs-type">Path</span>                /dev/almalinux_bogon/root<br>  LV <span class="hljs-type">Name</span>                root<br>  VG <span class="hljs-type">Name</span>                almalinux_bogon<br>  LV <span class="hljs-type">UUID</span>                nKyL47-CJnM-Pu2Z-WQqH-ylve-QZuc-FiJnUz<br>  LV <span class="hljs-keyword">Write</span> <span class="hljs-keyword">Access</span>        <span class="hljs-keyword">read</span>/<span class="hljs-keyword">write</span><br>  LV Creation host, <span class="hljs-type">time</span> bogon, <span class="hljs-number">2023</span><span class="hljs-number">-12</span><span class="hljs-number">-22</span> <span class="hljs-number">14</span>:<span class="hljs-number">20</span>:<span class="hljs-number">52</span> +<span class="hljs-number">0800</span><br>  LV Status              available<br>  # <span class="hljs-keyword">open</span>                 <span class="hljs-number">1</span><br>  LV Size                <span class="hljs-number">70.00</span> GiB<br>  <span class="hljs-keyword">Current</span> LE             <span class="hljs-number">17920</span><br>  Segments               <span class="hljs-number">1</span><br>  Allocation             <span class="hljs-keyword">inherit</span><br>  <span class="hljs-keyword">Read</span> ahead sectors     auto<br>  - currently <span class="hljs-keyword">set</span> <span class="hljs-keyword">to</span>     <span class="hljs-number">256</span><br>  Block device           <span class="hljs-number">253</span>:<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure></li><li><p>扩展 <code>/</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@bogon ~]# lvextend -L +700G /dev/mapper/almalinux_bogon-root<br>  Size of logical volume almalinux_bogon/root changed <span class="hljs-keyword">from</span> 70.00 GiB (17920 extents) <span class="hljs-keyword">to</span> 770.00 GiB (197120 extents).<br>  Logical volume almalinux_bogon/root successfully resized.<br> <br>[root@bogon ~]# xfs_growfs /dev/mapper/almalinux_bogon-root<br><span class="hljs-attribute">meta-data</span>=/dev/mapper/almalinux_bogon-root <span class="hljs-attribute">isize</span>=512    <span class="hljs-attribute">agcount</span>=4, <span class="hljs-attribute">agsize</span>=4587520 blks<br>         =                       <span class="hljs-attribute">sectsz</span>=4096  <span class="hljs-attribute">attr</span>=2, <span class="hljs-attribute">projid32bit</span>=1<br>         =                       <span class="hljs-attribute">crc</span>=1        <span class="hljs-attribute">finobt</span>=1, <span class="hljs-attribute">sparse</span>=1, <span class="hljs-attribute">rmapbt</span>=0<br>         =                       <span class="hljs-attribute">reflink</span>=1    <span class="hljs-attribute">bigtime</span>=1 <span class="hljs-attribute">inobtcount</span>=1 <span class="hljs-attribute">nrext64</span>=0<br>data     =                       <span class="hljs-attribute">bsize</span>=4096   <span class="hljs-attribute">blocks</span>=18350080, <span class="hljs-attribute">imaxpct</span>=25<br>         =                       <span class="hljs-attribute">sunit</span>=0      <span class="hljs-attribute">swidth</span>=0 blks<br>naming   =version 2              <span class="hljs-attribute">bsize</span>=4096   <span class="hljs-attribute">ascii-ci</span>=0, <span class="hljs-attribute">ftype</span>=1<br>log      =internal log           <span class="hljs-attribute">bsize</span>=4096   <span class="hljs-attribute">blocks</span>=8960, <span class="hljs-attribute">version</span>=2<br>         =                       <span class="hljs-attribute">sectsz</span>=4096  <span class="hljs-attribute">sunit</span>=1 blks, <span class="hljs-attribute">lazy-count</span>=1<br>realtime =none                   <span class="hljs-attribute">extsz</span>=4096   <span class="hljs-attribute">blocks</span>=0, <span class="hljs-attribute">rtextents</span>=0<br>data blocks changed <span class="hljs-keyword">from</span> 18350080 <span class="hljs-keyword">to</span> 201850880<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@bogon ~]<span class="hljs-comment"># df -h</span><br>文件系统                          容量  已用  可用 已用% 挂载点<br>devtmpfs                          <span class="hljs-number">4.0</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">4.0</span>M    <span class="hljs-number">0</span>% /dev<br>tmpfs                             <span class="hljs-number">3.7</span>G     <span class="hljs-number">0</span>  <span class="hljs-number">3.7</span>G    <span class="hljs-number">0</span>% <span class="hljs-regexp">/dev/</span>shm<br>tmpfs                             <span class="hljs-number">1.5</span>G  <span class="hljs-number">9.8</span>M  <span class="hljs-number">1.5</span>G    <span class="hljs-number">1</span>% /run<br><span class="hljs-regexp">/dev/m</span>apper<span class="hljs-regexp">/almalinux_bogon-root  770G   12G  759G    2% /</span><br><span class="hljs-regexp">/dev/</span>sda1                        <span class="hljs-number">1014</span>M  <span class="hljs-number">418</span>M  <span class="hljs-number">597</span>M   <span class="hljs-number">42</span>% /boot<br>tmpfs                             <span class="hljs-number">756</span>M   <span class="hljs-number">92</span>K  <span class="hljs-number">756</span>M    <span class="hljs-number">1</span>% <span class="hljs-regexp">/run/u</span>ser/<span class="hljs-number">0</span><br>overlay                           <span class="hljs-number">770</span>G   <span class="hljs-number">12</span>G  <span class="hljs-number">759</span>G    <span class="hljs-number">2</span>% <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/docker/</span>overlay2<span class="hljs-regexp">/5350a4d719574d0eb7a5fb79e75aa930b34314feb2e119380e72cc8d2fbbf315/m</span>erged<br><br></code></pre></td></tr></table></figure></li><li><p>将剩余的空间重新分配给 <code>/home</code></p></li><li><p>创建挂载点和卷宗</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@bogon</span> ~]<span class="hljs-meta"># lvcreate -l 100%FREE -n home almalinux_bogon</span><br>  Logical volume <span class="hljs-string">&quot;home&quot;</span> created.<br>[root<span class="hljs-symbol">@bogon</span> ~]<span class="hljs-meta"># mkfs.xfs /dev/mapper/almalinux_bogon-home</span><br></code></pre></td></tr></table></figure></li><li><p>校验挂载点 </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@bogon ~]# mkfs.xfs /dev/mapper/almalinux_bogon-home<br><span class="hljs-attribute">meta-data</span>=/dev/mapper/almalinux_bogon-home <span class="hljs-attribute">isize</span>=512    <span class="hljs-attribute">agcount</span>=4, <span class="hljs-attribute">agsize</span>=10009856 blks<br>         =                       <span class="hljs-attribute">sectsz</span>=4096  <span class="hljs-attribute">attr</span>=2, <span class="hljs-attribute">projid32bit</span>=1<br>         =                       <span class="hljs-attribute">crc</span>=1        <span class="hljs-attribute">finobt</span>=1, <span class="hljs-attribute">sparse</span>=1, <span class="hljs-attribute">rmapbt</span>=0<br>         =                       <span class="hljs-attribute">reflink</span>=1    <span class="hljs-attribute">bigtime</span>=1 <span class="hljs-attribute">inobtcount</span>=1 <span class="hljs-attribute">nrext64</span>=0<br>data     =                       <span class="hljs-attribute">bsize</span>=4096   <span class="hljs-attribute">blocks</span>=40039424, <span class="hljs-attribute">imaxpct</span>=25<br>         =                       <span class="hljs-attribute">sunit</span>=0      <span class="hljs-attribute">swidth</span>=0 blks<br>naming   =version 2              <span class="hljs-attribute">bsize</span>=4096   <span class="hljs-attribute">ascii-ci</span>=0, <span class="hljs-attribute">ftype</span>=1<br>log      =internal log           <span class="hljs-attribute">bsize</span>=4096   <span class="hljs-attribute">blocks</span>=19550, <span class="hljs-attribute">version</span>=2<br>         =                       <span class="hljs-attribute">sectsz</span>=4096  <span class="hljs-attribute">sunit</span>=1 blks, <span class="hljs-attribute">lazy-count</span>=1<br>realtime =none                   <span class="hljs-attribute">extsz</span>=4096   <span class="hljs-attribute">blocks</span>=0, <span class="hljs-attribute">rtextents</span>=0<br></code></pre></td></tr></table></figure></li><li><p>挂载 <code>/home</code></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@bogon ~]# mount <span class="hljs-regexp">/dev/m</span>apper<span class="hljs-regexp">/almalinux_bogon-home /</span>home<br></code></pre></td></tr></table></figure></li><li><p>结果</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@bogon ~]# df -h<br>文件系统                          容量  已用  可用 已用% 挂载点<br>devtmpfs                          <span class="hljs-number">4.0</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">4.0</span>M    <span class="hljs-number">0</span>% /dev<br>tmpfs                             <span class="hljs-number">3.7</span>G     <span class="hljs-number">0</span>  <span class="hljs-number">3.7</span>G    <span class="hljs-number">0</span>% /dev/shm<br>tmpfs                             <span class="hljs-number">1.5</span>G  <span class="hljs-number">9.8</span>M  <span class="hljs-number">1.5</span>G    <span class="hljs-number">1</span>% /run<br>/dev/mapper/almalinux_bogon-root  <span class="hljs-number">770</span>G   <span class="hljs-number">12</span>G  <span class="hljs-number">759</span>G    <span class="hljs-number">2</span>% /<br>/dev/sda1                        <span class="hljs-number">1014</span>M  <span class="hljs-number">418</span>M  <span class="hljs-number">597</span>M   <span class="hljs-number">42</span>% /boot<br>tmpfs                             <span class="hljs-number">756</span>M   <span class="hljs-number">92</span>K  <span class="hljs-number">756</span>M    <span class="hljs-number">1</span>% /run/<span class="hljs-keyword">user</span>/<span class="hljs-number">0</span><br>overlay                           <span class="hljs-number">770</span>G   <span class="hljs-number">12</span>G  <span class="hljs-number">759</span>G    <span class="hljs-number">2</span>% /var/lib/docker/overlay2/<span class="hljs-number">5350</span>a4d719574d0eb7a5fb79e75aa930b34314feb2e119380e72cc8d2fbbf315/merged<br>/dev/mapper/almalinux_bogon-home  <span class="hljs-number">153</span>G  <span class="hljs-number">1.1</span>G  <span class="hljs-number">152</span>G    <span class="hljs-number">1</span>% /home<br><br>[root@bogon ~]# lvdisplay<br>  <span class="hljs-comment">--- Logical volume ---</span><br>  LV <span class="hljs-type">Path</span>                /dev/almalinux_bogon/swap<br>  LV <span class="hljs-type">Name</span>                swap<br>  VG <span class="hljs-type">Name</span>                almalinux_bogon<br>  LV <span class="hljs-type">UUID</span>                k3WZ81-oxNS-KJ9J-UVLx-sUX8-bqDd<span class="hljs-number">-0</span>iPinl<br>  LV <span class="hljs-keyword">Write</span> <span class="hljs-keyword">Access</span>        <span class="hljs-keyword">read</span>/<span class="hljs-keyword">write</span><br>  LV Creation host, <span class="hljs-type">time</span> bogon, <span class="hljs-number">2023</span><span class="hljs-number">-12</span><span class="hljs-number">-22</span> <span class="hljs-number">14</span>:<span class="hljs-number">20</span>:<span class="hljs-number">48</span> +<span class="hljs-number">0800</span><br>  LV Status              available<br>  # <span class="hljs-keyword">open</span>                 <span class="hljs-number">2</span><br>  LV Size                &lt;<span class="hljs-number">7.77</span> GiB<br>  <span class="hljs-keyword">Current</span> LE             <span class="hljs-number">1989</span><br>  Segments               <span class="hljs-number">1</span><br>  Allocation             <span class="hljs-keyword">inherit</span><br>  <span class="hljs-keyword">Read</span> ahead sectors     auto<br>  - currently <span class="hljs-keyword">set</span> <span class="hljs-keyword">to</span>     <span class="hljs-number">256</span><br>  Block device           <span class="hljs-number">253</span>:<span class="hljs-number">1</span><br><br>  <span class="hljs-comment">--- Logical volume ---</span><br>  LV <span class="hljs-type">Path</span>                /dev/almalinux_bogon/root<br>  LV <span class="hljs-type">Name</span>                root<br>  VG <span class="hljs-type">Name</span>                almalinux_bogon<br>  LV <span class="hljs-type">UUID</span>                nKyL47-CJnM-Pu2Z-WQqH-ylve-QZuc-FiJnUz<br>  LV <span class="hljs-keyword">Write</span> <span class="hljs-keyword">Access</span>        <span class="hljs-keyword">read</span>/<span class="hljs-keyword">write</span><br>  LV Creation host, <span class="hljs-type">time</span> bogon, <span class="hljs-number">2023</span><span class="hljs-number">-12</span><span class="hljs-number">-22</span> <span class="hljs-number">14</span>:<span class="hljs-number">20</span>:<span class="hljs-number">52</span> +<span class="hljs-number">0800</span><br>  LV Status              available<br>  # <span class="hljs-keyword">open</span>                 <span class="hljs-number">1</span><br>  LV Size                <span class="hljs-number">770.00</span> GiB<br>  <span class="hljs-keyword">Current</span> LE             <span class="hljs-number">197120</span><br>  Segments               <span class="hljs-number">2</span><br>  Allocation             <span class="hljs-keyword">inherit</span><br>  <span class="hljs-keyword">Read</span> ahead sectors     auto<br>  - currently <span class="hljs-keyword">set</span> <span class="hljs-keyword">to</span>     <span class="hljs-number">256</span><br>  Block device           <span class="hljs-number">253</span>:<span class="hljs-number">0</span><br><br>  <span class="hljs-comment">--- Logical volume ---</span><br>  LV <span class="hljs-type">Path</span>                /dev/almalinux_bogon/home<br>  LV <span class="hljs-type">Name</span>                home<br>  VG <span class="hljs-type">Name</span>                almalinux_bogon<br>  LV <span class="hljs-type">UUID</span>                UkzIC6<span class="hljs-number">-6</span>Qkc<span class="hljs-number">-0</span>cr0-ULDk-swJI-AlhI-Nt0sVj<br>  LV <span class="hljs-keyword">Write</span> <span class="hljs-keyword">Access</span>        <span class="hljs-keyword">read</span>/<span class="hljs-keyword">write</span><br>  LV Creation host, <span class="hljs-type">time</span> bogon, <span class="hljs-number">2023</span><span class="hljs-number">-12</span><span class="hljs-number">-22</span> <span class="hljs-number">17</span>:<span class="hljs-number">40</span>:<span class="hljs-number">01</span> +<span class="hljs-number">0800</span><br>  LV Status              available<br>  # <span class="hljs-keyword">open</span>                 <span class="hljs-number">1</span><br>  LV Size                &lt;<span class="hljs-number">152.74</span> GiB<br>  <span class="hljs-keyword">Current</span> LE             <span class="hljs-number">39101</span><br>  Segments               <span class="hljs-number">1</span><br>  Allocation             <span class="hljs-keyword">inherit</span><br>  <span class="hljs-keyword">Read</span> ahead sectors     auto<br>  - currently <span class="hljs-keyword">set</span> <span class="hljs-keyword">to</span>     <span class="hljs-number">256</span><br>  Block device           <span class="hljs-number">253</span>:<span class="hljs-number">2</span><br><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Linux-xfs格式的-home-磁盘压缩分配给&quot;&gt;&lt;a href=&quot;#Linux-xfs格式的-home-磁盘压缩分配给&quot; class=&quot;headerlink&quot; title=&quot;Linux xfs格式的 /home 磁盘压缩分配给 /&quot;&gt;&lt;/a&gt;Linux xf</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.dekun.wang/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://blog.dekun.wang/tags/Linux/"/>
    
    <category term="XFS格式" scheme="https://blog.dekun.wang/tags/XFS%E6%A0%BC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Dockerfile 命令</title>
    <link href="https://blog.dekun.wang/blog/5ee55859.html"/>
    <id>https://blog.dekun.wang/blog/5ee55859.html</id>
    <published>2023-08-11T05:07:26.000Z</published>
    <updated>2023-08-11T05:20:23.290Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Dockerfile-命令"><a href="#Dockerfile-命令" class="headerlink" title="Dockerfile 命令"></a>Dockerfile 命令</h2><h3 id="1-FROM-命令"><a href="#1-FROM-命令" class="headerlink" title="1. FROM 命令"></a>1. FROM 命令</h3><ul><li>作用：指定基础镜像。</li><li>示例：<code>FROM ubuntu:20.04</code></li></ul><h3 id="2-MAINTAINER-命令"><a href="#2-MAINTAINER-命令" class="headerlink" title="2. MAINTAINER 命令"></a>2. MAINTAINER 命令</h3><ul><li>作用：指定镜像作者的信息（已过时，建议使用 LABEL）。</li><li>示例：<code>MAINTAINER yourname@example.com</code></li></ul><h3 id="3-LABEL-命令"><a href="#3-LABEL-命令" class="headerlink" title="3. LABEL 命令"></a>3. LABEL 命令</h3><ul><li>作用：为镜像添加元数据。</li><li>示例：<code>LABEL maintainer=&quot;yourname@example.com&quot;</code></li></ul><h3 id="4-RUN-命令"><a href="#4-RUN-命令" class="headerlink" title="4. RUN 命令"></a>4. RUN 命令</h3><ul><li>作用：在镜像内部执行命令，并生成新的镜像层。</li><li>示例：<code>RUN apt-get update &amp;&amp; apt-get install -y nginx</code></li></ul><h3 id="5-CMD-命令"><a href="#5-CMD-命令" class="headerlink" title="5. CMD 命令"></a>5. CMD 命令</h3><ul><li>作用：指定容器启动后默认执行的命令。</li><li>示例：<code>CMD [&quot;nginx&quot;, &quot;-g&quot;, &quot;daemon off;&quot;]</code></li></ul><p>  <strong>注意事项：</strong></p><ul><li><code>CMD</code> 命令定义的命令在容器启动时会被执行，但可以被传递给 <code>docker run</code> 命令的参数覆盖。</li><li>Dockerfile 中只能有一个 <code>CMD</code> 命令，多个命令只有最后一个会生效。</li></ul><h3 id="6-ENTRYPOINT-命令"><a href="#6-ENTRYPOINT-命令" class="headerlink" title="6. ENTRYPOINT 命令"></a>6. ENTRYPOINT 命令</h3><ul><li>作用：设置容器启动时执行的命令，不会被容器启动命令覆盖。</li><li>示例：<code>ENTRYPOINT [&quot;nginx&quot;, &quot;-g&quot;, &quot;daemon off;&quot;]</code></li></ul><p>  <strong>注意事项：</strong></p><ul><li><code>ENTRYPOINT</code> 命令定义的命令在容器启动时始终会被执行，不会被 <code>docker run</code> 命令的参数覆盖。</li><li>如果需要覆盖 <code>ENTRYPOINT</code> 定义的命令，可以使用 <code>docker run</code> 命令的 <code>--entrypoint</code> 参数。</li></ul><p>  <strong>不同之处：</strong></p><ul><li><code>CMD</code> 命令的参数会被传递给 <code>ENTRYPOINT</code> 定义的命令，即 <code>CMD</code> 中的内容可以看作是默认的参数。</li></ul><h3 id="7-ADD-命令"><a href="#7-ADD-命令" class="headerlink" title="7. ADD 命令"></a>7. ADD 命令</h3><ul><li>作用：将文件、目录或远程文件复制到镜像中。</li><li>示例：<code>ADD app.tar.gz /myapp/</code></li></ul><h3 id="8-COPY-命令"><a href="#8-COPY-命令" class="headerlink" title="8. COPY 命令"></a>8. COPY 命令</h3><ul><li>作用：将文件或目录复制到镜像中。</li><li>示例：<code>COPY app-files /myapp/</code></li></ul><p>  <strong>区别：</strong> </p><ul><li><code>ADD</code> 命令支持自动解压缩和 URL 下载，<code>COPY</code> 命令不支持。</li></ul><h3 id="9-ENV-命令"><a href="#9-ENV-命令" class="headerlink" title="9. ENV 命令"></a>9. ENV 命令</h3><ul><li>作用：设置环境变量。</li><li>示例：<code>ENV MY_VAR=myvalue</code></li></ul><h3 id="10-ARG-命令"><a href="#10-ARG-命令" class="headerlink" title="10. ARG 命令"></a>10. ARG 命令</h3><ul><li>作用：定义构建时的变量。</li><li>示例：<code>ARG build_version=1.0</code></li></ul><p>  <strong>区别：</strong></p><ul><li><code>ENV</code> 命令用于设置容器运行时环境变量，<code>ARG</code> 命令用于构建过程中传递参数。</li></ul><h3 id="11-EXPOSE-命令"><a href="#11-EXPOSE-命令" class="headerlink" title="11. EXPOSE 命令"></a>11. EXPOSE 命令</h3><ul><li>作用：声明容器将监听的端口。</li><li>示例：<code>EXPOSE 80 443</code></li></ul><h3 id="12-VOLUME-命令"><a href="#12-VOLUME-命令" class="headerlink" title="12. VOLUME 命令"></a>12. VOLUME 命令</h3><ul><li>作用：声明容器挂载点。</li><li>示例：<code>VOLUME /data</code></li></ul><h3 id="13-USER-命令"><a href="#13-USER-命令" class="headerlink" title="13. USER 命令"></a>13. USER 命令</h3><ul><li>作用：指定容器中进程的用户。</li><li>示例：<code>USER appuser</code></li></ul><h3 id="14-WORKDIR-命令"><a href="#14-WORKDIR-命令" class="headerlink" title="14. WORKDIR 命令"></a>14. WORKDIR 命令</h3><ul><li>作用：设置容器中的工作目录。</li><li>示例：<code>WORKDIR /app</code></li></ul><h3 id="15-ONBUILD-命令"><a href="#15-ONBUILD-命令" class="headerlink" title="15. ONBUILD 命令"></a>15. ONBUILD 命令</h3><ul><li>作用：定义触发器指令，会在子镜像构建时执行。</li><li>示例：<code>ONBUILD ADD . /app/src</code></li></ul><h3 id="16-STOPSIGNAL-命令"><a href="#16-STOPSIGNAL-命令" class="headerlink" title="16. STOPSIGNAL 命令"></a>16. STOPSIGNAL 命令</h3><ul><li>作用：设置容器停止时发送的信号。</li><li>示例：<code>STOPSIGNAL SIGQUIT</code></li></ul><h3 id="17-HEALTHCHECK-命令"><a href="#17-HEALTHCHECK-命令" class="headerlink" title="17. HEALTHCHECK 命令"></a>17. HEALTHCHECK 命令</h3><ul><li>作用：定义容器的健康检查命令。</li><li>示例：<code>HEALTHCHECK --interval=30s --timeout=3s CMD curl -f http://localhost/ || exit 1</code></li></ul><h3 id="18-SHELL-命令"><a href="#18-SHELL-命令" class="headerlink" title="18. SHELL 命令"></a>18. SHELL 命令</h3><ul><li>作用：设置默认的 shell。</li><li>示例：<code>SHELL [&quot;/bin/bash&quot;, &quot;-c&quot;]</code></li></ul><h2 id="Spring-Boot-整合-Docker-示例"><a href="#Spring-Boot-整合-Docker-示例" class="headerlink" title="Spring Boot 整合 Docker 示例"></a>Spring Boot 整合 Docker 示例</h2><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li><p><strong>创建 Spring Boot 项目：</strong><br>创建一个简单的 Spring Boot 项目，例如一个基本的 REST API 应用。</p></li><li><p><strong>编写 Dockerfile：</strong><br>在项目根目录下创建一个名为 <code>Dockerfile</code> 的文件，并根据你的项目配置编写 Dockerfile。以下是一个示例：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs Dockerfile"><span class="hljs-comment"># 使用一个基础的 Java 镜像</span><br><span class="hljs-keyword">FROM</span> adoptopenjdk/openjdk11:alpine-jre<br><br><span class="hljs-comment"># 设置工作目录</span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><br><br><span class="hljs-comment"># 复制 JAR 文件到容器中</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> target/your-app.jar app.jar</span><br><br><span class="hljs-comment"># 暴露 Spring Boot 应用监听的端口</span><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">8080</span><br><br><span class="hljs-comment"># 启动 Spring Boot 应用</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> [<span class="hljs-string">&quot;java&quot;</span>, <span class="hljs-string">&quot;-jar&quot;</span>, <span class="hljs-string">&quot;app.jar&quot;</span>]</span><br></code></pre></td></tr></table></figure></li><li><p><strong>构建 Docker 镜像：</strong><br>打开终端，进入项目根目录，运行以下命令来构建 Docker 镜像：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker build -t your-app-name .<br></code></pre></td></tr></table></figure></li><li><p><strong>运行 Docker 容器：</strong><br>构建成功后，可以使用以下命令运行 Docker 容器：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run -p 8080:8080 your-app-name<br></code></pre></td></tr></table></figure></li><li><p><strong>访问应用：</strong><br>在浏览器中访问 <code>http://localhost:8080</code>，应该能够看到 Spring Boot 应用的响应。</p></li></ol><p>请根据你的实际项目需求进行相应的配置和优化。</p><p>记得替换上述示例中的 <code>your-app-name</code> 和 <code>your-app.jar</code> 为你的实际应用名称和 JAR 文件名。在实际项目中，可能还需要考虑数据库、日志等更复杂的情况。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Dockerfile-命令&quot;&gt;&lt;a href=&quot;#Dockerfile-命令&quot; class=&quot;headerlink&quot; title=&quot;Dockerfile 命令&quot;&gt;&lt;/a&gt;Dockerfile 命令&lt;/h2&gt;&lt;h3 id=&quot;1-FROM-命令&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="ChatGPT" scheme="https://blog.dekun.wang/categories/ChatGPT/"/>
    
    <category term="Docker" scheme="https://blog.dekun.wang/categories/Docker/"/>
    
    <category term="DockerFile" scheme="https://blog.dekun.wang/categories/Docker/DockerFile/"/>
    
    
    <category term="Docker" scheme="https://blog.dekun.wang/tags/Docker/"/>
    
    <category term="DockerFile" scheme="https://blog.dekun.wang/tags/DockerFile/"/>
    
  </entry>
  
  <entry>
    <title>Spring源码： StartupStep、ApplicationStartup 接口</title>
    <link href="https://blog.dekun.wang/blog/2fd1f403.html"/>
    <id>https://blog.dekun.wang/blog/2fd1f403.html</id>
    <published>2023-06-03T05:37:02.000Z</published>
    <updated>2023-06-03T15:05:16.147Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring源码：-StartupStep、ApplicationStartup-接口解析"><a href="#Spring源码：-StartupStep、ApplicationStartup-接口解析" class="headerlink" title="Spring源码： StartupStep、ApplicationStartup 接口解析"></a>Spring源码： StartupStep、ApplicationStartup 接口解析</h1><h2 id="UML"><a href="#UML" class="headerlink" title="UML"></a>UML</h2><blockquote><p>红色线为内部类关系，带有<code>㊉</code>一方，是另一方的内部类。</p></blockquote><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/java/spring/startupStepApplicationStartup/StartupStep.png" alt="StartupStep-ApplicationStartup-Contain-InnerClass"></p><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/java/spring/startupStepApplicationStartup/Event.png" alt="依赖关系"></p><ul><li><p>public interface <strong>StartupStep</strong></p><ul><li><p><em>default</em> interface <strong>Tags</strong> extends <strong>Iterable</strong><Tag></p></li><li><p><em>default</em> interface <strong>Tag</strong></p></li></ul></li><li><p><em>default</em> class <strong>FlightRecorderStartupStep</strong> implements <strong>StartupStep</strong>  </p></li><li><p>内含有：<strong>class FlightRecorderStartupEvent extends Event</strong> 类的变量 <code>event</code>。</p><ul><li><em>default</em> static class <strong>FlightRecorderTag</strong> implements <strong>Tag</strong> </li><li><em>default</em> static class <strong>FlightRecorderTags</strong> implements <strong>Tags</strong><ul><li>private class <strong>TagsIterator</strong> implements <strong>Iterator</strong><Tag></li></ul></li></ul></li><li><p>public interface <strong>ApplicationStartup</strong></p><ul><li>default class <strong>DefaultApplicationStartup</strong> implements <strong>ApplicationStartup</strong> <ul><li><em>default</em> static class <strong>DefaultStartupStep</strong> implements <em><strong>StartupStep</strong></em> <ul><li><em>default</em> static class <strong>DefaultTags</strong> implements <em><strong>StartupStep.Tags</strong></em></li></ul></li></ul></li><li>public class <strong>FlightRecorderApplicationStartup</strong> implements <strong>ApplicationStartup</strong></li></ul></li></ul><blockquote><p>两接口、三个实现类，</p><p>StartupStep</p><p>​FlightRecorderStartupStep </p><p>ApplicationStartup</p><p>​<strong>DefaultApplicationStartup</strong> </p><p>​FlightRecorderApplicationStartup </p></blockquote><h2 id="StartupStep接口"><a href="#StartupStep接口" class="headerlink" title="StartupStep接口"></a>StartupStep接口</h2><blockquote><p>步骤记录有关ApplicationStartup期间发生的特定阶段或操作的指标。</p><p>StartupStep 的生命周期如下：</p><ol><li><p>该步骤是通过调用<strong>the application startup</strong>启动创建和启动的，并被分配了一个唯一的id 。</p></li><li><p>然后我们可以在处理过程中使用<strong>StartupStep.Tags</strong>附加信息</p></li><li><p>然后我们需要标记步骤的**<code>end()</code>**</p></li></ol><p>实现可以跟踪“执行时间”或其他步骤指标。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">StartupStep</span> &#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the name of the startup step.</span><br><span class="hljs-comment"> * &lt;p&gt;A step name describes the current action or phase. This technical</span><br><span class="hljs-comment"> * name should be &quot;.&quot; namespaced and can be reused to describe other instances of</span><br><span class="hljs-comment"> * similar steps during application startup.</span><br><span class="hljs-comment"> */</span><br>String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the unique id for this step within the application startup.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">long</span> <span class="hljs-title function_">getId</span><span class="hljs-params">()</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return, if available, the id of the parent step.</span><br><span class="hljs-comment"> * &lt;p&gt;The parent step is the step that was started the most recently</span><br><span class="hljs-comment"> * when the current step was created.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Nullable</span><br>Long <span class="hljs-title function_">getParentId</span><span class="hljs-params">()</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Add a &#123;<span class="hljs-doctag">@link</span> Tag&#125; to the step.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> key tag key</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> value tag value</span><br><span class="hljs-comment"> */</span><br>StartupStep <span class="hljs-title function_">tag</span><span class="hljs-params">(String key, String value)</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Add a &#123;<span class="hljs-doctag">@link</span> Tag&#125; to the step.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> key tag key</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> value &#123;<span class="hljs-doctag">@link</span> Supplier&#125; for the tag value</span><br><span class="hljs-comment"> */</span><br>StartupStep <span class="hljs-title function_">tag</span><span class="hljs-params">(String key, Supplier&lt;String&gt; value)</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the &#123;<span class="hljs-doctag">@link</span> Tag&#125; collection for this step.</span><br><span class="hljs-comment"> */</span><br>Tags <span class="hljs-title function_">getTags</span><span class="hljs-params">()</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Record the state of the step and possibly other metrics like execution time.</span><br><span class="hljs-comment"> * &lt;p&gt;Once ended, changes on the step state are not allowed.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">end</span><span class="hljs-params">()</span>;<br><br><br>  #  对 Tag 的迭代。<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Immutable collection of &#123;<span class="hljs-doctag">@link</span> Tag&#125;.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Tags</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Iterable</span>&lt;Tag&gt; &#123;<br>&#125;<br><br><br>  # 将 FlightRecorderTag 类的get方法使用接口暴露出来。方便面向接口迭代。<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Simple key/value association for storing step metadata.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Tag</span> &#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the &#123;<span class="hljs-doctag">@code</span> Tag&#125; name.</span><br><span class="hljs-comment"> */</span><br>String <span class="hljs-title function_">getKey</span><span class="hljs-params">()</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the &#123;<span class="hljs-doctag">@code</span> Tag&#125; value.</span><br><span class="hljs-comment"> */</span><br>String <span class="hljs-title function_">getValue</span><span class="hljs-params">()</span>;<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>将记录通过 FlightRecorderStartupEvent  扩展为事件。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Enabled(true)</span><br><span class="hljs-meta">@StackTrace(true)</span><br><span class="hljs-meta">@Registered(true)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Event</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">jdk</span>.internal.event.Event &#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-title function_">Event</span><span class="hljs-params">()</span> &#123;&#125;<br>  <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">begin</span><span class="hljs-params">()</span> &#123; &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">end</span><span class="hljs-params">()</span> &#123;&#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">commit</span><span class="hljs-params">()</span> &#123;&#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isEnabled</span><span class="hljs-params">()</span> &#123; <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">shouldCommit</span><span class="hljs-params">()</span> &#123; <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; &#125;<br>  <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">set</span><span class="hljs-params">(<span class="hljs-type">int</span> index, Object value)</span> &#123; &#125;<br>&#125;<br><br><br><span class="hljs-meta">@Category(&quot;Spring Application&quot;)</span><br><span class="hljs-meta">@Label(&quot;Startup Step&quot;)</span><br><span class="hljs-meta">@Description(&quot;Spring Application Startup&quot;)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">FlightRecorderStartupEvent</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Event</span> &#123;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> eventId;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> parentId;<br><br><span class="hljs-meta">@Label(&quot;Name&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> String name;<br><br><span class="hljs-meta">@Label(&quot;Tags&quot;)</span><br><span class="hljs-type">String</span> <span class="hljs-variable">tags</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">FlightRecorderStartupEvent</span><span class="hljs-params">(<span class="hljs-type">long</span> eventId, String name, <span class="hljs-type">long</span> parentId)</span> &#123;<br><span class="hljs-built_in">this</span>.name = name;<br><span class="hljs-built_in">this</span>.eventId = eventId;<br><span class="hljs-built_in">this</span>.parentId = parentId;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setTags</span><span class="hljs-params">(String tags)</span> &#123;<br><span class="hljs-built_in">this</span>.tags = tags;<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">FlightRecorderStartupStep</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">StartupStep</span> &#123;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> FlightRecorderStartupEvent event;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">FlightRecorderTags</span> <span class="hljs-variable">tags</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FlightRecorderTags</span>();<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Consumer&lt;FlightRecorderStartupStep&gt; recordingCallback;<br><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">FlightRecorderStartupStep</span><span class="hljs-params">(</span><br><span class="hljs-params">    <span class="hljs-type">long</span> id, String name, <span class="hljs-type">long</span> parentId,</span><br><span class="hljs-params">Consumer&lt;FlightRecorderStartupStep&gt; recordingCallback)</span> &#123;<br><br><span class="hljs-built_in">this</span>.event = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FlightRecorderStartupEvent</span>(id, name, parentId);<br><span class="hljs-built_in">this</span>.event.begin();<br><span class="hljs-built_in">this</span>.recordingCallback = recordingCallback;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.event.name;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">long</span> <span class="hljs-title function_">getId</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.event.eventId;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> Long <span class="hljs-title function_">getParentId</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.event.parentId;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> StartupStep <span class="hljs-title function_">tag</span><span class="hljs-params">(String key, String value)</span> &#123;<br><span class="hljs-built_in">this</span>.tags.add(key, value);<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> StartupStep <span class="hljs-title function_">tag</span><span class="hljs-params">(String key, Supplier&lt;String&gt; value)</span> &#123;<br><span class="hljs-built_in">this</span>.tags.add(key, value.get());<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> Tags <span class="hljs-title function_">getTags</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.tags;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">end</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-built_in">this</span>.event.end();<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.event.shouldCommit()) &#123;<br><span class="hljs-type">StringBuilder</span> <span class="hljs-variable">builder</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br><span class="hljs-built_in">this</span>.tags.forEach(tag -&gt;<br>builder.append(tag.getKey()).append(<span class="hljs-string">&#x27;=&#x27;</span>).append(tag.getValue()).append(<span class="hljs-string">&#x27;,&#x27;</span>)<br>);<br><span class="hljs-built_in">this</span>.event.setTags(builder.toString());<br>&#125;<br><span class="hljs-built_in">this</span>.event.commit();<br><span class="hljs-built_in">this</span>.recordingCallback.accept(<span class="hljs-built_in">this</span>);<br>&#125;<br><br><span class="hljs-keyword">protected</span> FlightRecorderStartupEvent <span class="hljs-title function_">getEvent</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.event;<br>&#125;<br><br><br>  <span class="hljs-comment">// 封装 Tag 信息</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FlightRecorderTags</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Tags</span> &#123;<br><br><span class="hljs-keyword">private</span> Tag[] tags = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Tag</span>[<span class="hljs-number">0</span>];<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(String key, String value)</span> &#123;<br>Tag[] newTags = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Tag</span>[<span class="hljs-built_in">this</span>.tags.length + <span class="hljs-number">1</span>];<br>      <span class="hljs-comment">//数组扩容。</span><br>System.arraycopy(<span class="hljs-built_in">this</span>.tags, <span class="hljs-number">0</span>, newTags, <span class="hljs-number">0</span>, <span class="hljs-built_in">this</span>.tags.length);<br>      <span class="hljs-comment">// 每个数组存放是 FlightRecorderTag 对象。</span><br>newTags[newTags.length - <span class="hljs-number">1</span>] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FlightRecorderTag</span>(key, value);<br><span class="hljs-built_in">this</span>.tags = newTags;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(String key, Supplier&lt;String&gt; value)</span> &#123;<br>add(key, value.get());<br>&#125;<br><br><span class="hljs-meta">@NonNull</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> Iterator&lt;Tag&gt; <span class="hljs-title function_">iterator</span><span class="hljs-params">()</span> &#123;<br>      <span class="hljs-comment">// 自身内部类</span><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TagsIterator</span>();<br>&#125;<br>    <br>    <span class="hljs-comment">// 迭代功能</span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TagsIterator</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Iterator</span>&lt;Tag&gt; &#123;<br><span class="hljs-keyword">private</span> <span class="hljs-type">int</span> <span class="hljs-variable">idx</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">hasNext</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.idx &lt; tags.length;<br>&#125;<br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> Tag <span class="hljs-title function_">next</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> tags[<span class="hljs-built_in">this</span>.idx++];<br>&#125;<br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">remove</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnsupportedOperationException</span>(<span class="hljs-string">&quot;tags are append only&quot;</span>);<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 实体类，key-value，数据存储。</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FlightRecorderTag</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Tag</span> &#123;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String key;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String value;<br><span class="hljs-keyword">public</span> <span class="hljs-title function_">FlightRecorderTag</span><span class="hljs-params">(String key, String value)</span> &#123;<br><span class="hljs-built_in">this</span>.key = key;<br><span class="hljs-built_in">this</span>.value = value;<br>&#125;<br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getKey</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.key;<br>&#125;<br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getValue</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.value;<br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="ApplicationStartup"><a href="#ApplicationStartup" class="headerlink" title="ApplicationStartup"></a>ApplicationStartup</h2><blockquote><p>使用steps检测应用程序启动阶段。<br>核心容器及其基础结构组件可以使用ApplicationStartup来标记应用程序启动期间的步骤，并收集有关执行上下文或其处理时间的数据。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">ApplicationStartup</span> &#123;<br>  <br><span class="hljs-type">ApplicationStartup</span> <span class="hljs-variable">DEFAULT</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DefaultApplicationStartup</span>();<br>  <br>StartupStep <span class="hljs-title function_">start</span><span class="hljs-params">(String name)</span>;<br>&#125;<br><br><br># 实现类,<span class="hljs-keyword">default</span> 作用域 ，仅能通过，ApplicationStartup.DEFAULT 获取。<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DefaultApplicationStartup</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ApplicationStartup</span> &#123;<br># DefaultStartupStep 自身内部类<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">DefaultStartupStep</span> <span class="hljs-variable">DEFAULT_STARTUP_STEP</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DefaultStartupStep</span>();<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> DefaultStartupStep <span class="hljs-title function_">start</span><span class="hljs-params">(String name)</span> &#123;<br><span class="hljs-keyword">return</span> DEFAULT_STARTUP_STEP;<br>&#125;<br><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DefaultStartupStep</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">StartupStep</span> &#123;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">DefaultTags</span> <span class="hljs-variable">TAGS</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DefaultTags</span>();<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&quot;default&quot;</span>;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">long</span> <span class="hljs-title function_">getId</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0L</span>;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> Long <span class="hljs-title function_">getParentId</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> Tags <span class="hljs-title function_">getTags</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.TAGS;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> StartupStep <span class="hljs-title function_">tag</span><span class="hljs-params">(String key, String value)</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> StartupStep <span class="hljs-title function_">tag</span><span class="hljs-params">(String key, Supplier&lt;String&gt; value)</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">end</span><span class="hljs-params">()</span> &#123;<br><br>&#125;<br>    <br><span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DefaultTags</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">StartupStep</span>.Tags &#123;<br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> Iterator&lt;StartupStep.Tag&gt; iterator() &#123;<br><span class="hljs-keyword">return</span> Collections.emptyIterator();<br>&#125;<br>&#125;<br>&#125;<br><br>&#125;<br><br><span class="hljs-comment">//  ----------------------------------------------------------------</span><br>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FlightRecorderApplicationStartup</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ApplicationStartup</span> &#123;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">AtomicLong</span> <span class="hljs-variable">currentSequenceId</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AtomicLong</span>();<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Deque&lt;Long&gt; currentSteps;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">FlightRecorderApplicationStartup</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-built_in">this</span>.currentSteps = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcurrentLinkedDeque</span>&lt;&gt;();<br><span class="hljs-built_in">this</span>.currentSteps.offerFirst(<span class="hljs-built_in">this</span>.currentSequenceId.get());<br>&#125;<br><br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> StartupStep <span class="hljs-title function_">start</span><span class="hljs-params">(String name)</span> &#123;<br><span class="hljs-type">long</span> <span class="hljs-variable">sequenceId</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.currentSequenceId.incrementAndGet();<br><span class="hljs-built_in">this</span>.currentSteps.offerFirst(sequenceId);<br>    <span class="hljs-comment">// FlightRecorderStartupStep </span><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FlightRecorderStartupStep</span><br>      (sequenceId, name, <span class="hljs-built_in">this</span>.currentSteps.getFirst(), <br>committedStep -&gt; <span class="hljs-built_in">this</span>.currentSteps.removeFirstOccurrence(sequenceId));<br>&#125;<br><br>&#125;<br><br><br></code></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><blockquote><p>ApplicationStartup 对 StartupStep 进一步封装，使用时通过ApplicationStartup 获取 StartupStep 的实例。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-type">ApplicationStartup</span> <span class="hljs-variable">applicationStartup</span> <span class="hljs-operator">=</span> ApplicationStartup.DEFAULT;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">AnnotationConfigApplicationContext</span><span class="hljs-params">()</span> &#123;<br>   <span class="hljs-comment">//getApplicationStartup()获取的值：ApplicationStartup.DEFAULT </span><br><span class="hljs-type">StartupStep</span> <span class="hljs-variable">createAnnotatedBeanDefReader</span> <span class="hljs-operator">=</span>  <span class="hljs-built_in">this</span>.getApplicationStartup().start(<span class="hljs-string">&quot;spring.context.annotated-bean-reader.create&quot;</span>);<br><span class="hljs-built_in">this</span>.reader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">AnnotatedBeanDefinitionReader</span>(<span class="hljs-built_in">this</span>);<br>createAnnotatedBeanDefReader.end();<br><span class="hljs-built_in">this</span>.scanner = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathBeanDefinitionScanner</span>(<span class="hljs-built_in">this</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Event-机制"><a href="#Event-机制" class="headerlink" title="Event 机制"></a>Event 机制</h3><blockquote><p>待补充。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Spring源码：-StartupStep、ApplicationStartup-接口解析&quot;&gt;&lt;a href=&quot;#Spring源码：-StartupStep、ApplicationStartup-接口解析&quot; class=&quot;headerlink&quot; title=&quot;Sp</summary>
      
    
    
    
    <category term="源码" scheme="https://blog.dekun.wang/categories/%E6%BA%90%E7%A0%81/"/>
    
    <category term="Spring" scheme="https://blog.dekun.wang/categories/%E6%BA%90%E7%A0%81/Spring/"/>
    
    <category term="Spring" scheme="https://blog.dekun.wang/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://blog.dekun.wang/tags/Spring/"/>
    
    <category term="源码" scheme="https://blog.dekun.wang/tags/%E6%BA%90%E7%A0%81/"/>
    
    <category term="StartupStep" scheme="https://blog.dekun.wang/tags/StartupStep/"/>
    
    <category term="ApplicationStartup" scheme="https://blog.dekun.wang/tags/ApplicationStartup/"/>
    
  </entry>
  
  <entry>
    <title>SPI （Service Provider Interface）机制</title>
    <link href="https://blog.dekun.wang/blog/e2c17ed0.html"/>
    <id>https://blog.dekun.wang/blog/e2c17ed0.html</id>
    <published>2023-06-01T13:57:33.000Z</published>
    <updated>2023-06-01T19:05:35.894Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SPI-（Service-Provider-Interface）机制"><a href="#SPI-（Service-Provider-Interface）机制" class="headerlink" title="SPI （Service Provider Interface）机制"></a>SPI （Service Provider Interface）机制</h1><h2 id="什么是SPI机制"><a href="#什么是SPI机制" class="headerlink" title="什么是SPI机制"></a>什么是SPI机制</h2><blockquote><p>JDK内置的一种 服务提供发现机制，可以用来启用框架扩展和替换组件。</p><p>暴露一个公共接口，共开发人员实现，动态加载实现类。</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs groovy"># dubbo spi 依赖包 <br>implementation <span class="hljs-string">&#x27;org.apache.dubbo:dubbo-common:3.2.2&#x27;</span><br></code></pre></td></tr></table></figure><blockquote><p>接口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> dekun.wang.spi.interfaces;<br><br><span class="hljs-keyword">import</span> org.apache.dubbo.common.extension.SPI;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> &lt;a href=&quot;mailto:wangdekunemail@gmail.com&quot;&gt;WangDeKun&lt;/a&gt;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span></span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@SPI</span> <span class="hljs-comment">//dubbo spi 必须注解</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Command</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">execute</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">package</span> dekun.wang.spi.interfaces.dubbo;<br><br><span class="hljs-keyword">import</span> org.apache.dubbo.common.extension.SPI;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> &lt;a href=&quot;mailto:wangdekunemail@gmail.com&quot;&gt;WangDeKun&lt;/a&gt;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span></span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@SPI</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">CommandDubbo</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">execute</span><span class="hljs-params">()</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p>实现类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> dekun.wang.spi.interfaces.impl;<br><br><span class="hljs-keyword">import</span> dekun.wang.spi.interfaces.Command;<br><span class="hljs-keyword">import</span> org.apache.dubbo.common.extension.SPI;<br><br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> &lt;a href=&quot;mailto:wangdekunemail@gmail.com&quot;&gt;WangDeKun&lt;/a&gt;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span></span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@SPI(&quot;CommandEnv&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommandEnv</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Command</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">execute</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;==========================&quot;</span>);<br>        <span class="hljs-type">ProcessBuilder</span> <span class="hljs-variable">processBuilder</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProcessBuilder</span>();<br>        Map&lt;String, String&gt; environment = processBuilder.environment();<br>        System.out.println(<span class="hljs-string">&quot;Brew=&quot;</span> + environment.get(<span class="hljs-string">&quot;Brew&quot;</span>));<br>        System.out.println(<span class="hljs-string">&quot;--------------------------&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> dekun.wang.spi.interfaces.impl;<br><br><span class="hljs-keyword">import</span> dekun.wang.spi.interfaces.Command;<br><span class="hljs-keyword">import</span> org.apache.dubbo.common.extension.SPI;<br><br><span class="hljs-keyword">import</span> java.io.BufferedReader;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStreamReader;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> &lt;a href=&quot;mailto:wangdekunemail@gmail.com&quot;&gt;WangDeKun&lt;/a&gt;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span></span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@SPI(&quot;CommandWhichGit&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommandWhichGit</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Command</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">execute</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;==========================&quot;</span>);<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">Process</span> <span class="hljs-variable">pr</span> <span class="hljs-operator">=</span> Runtime.getRuntime().exec(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;/usr/bin/which&quot;</span>, <span class="hljs-string">&quot;git&quot;</span>&#125;);<br>            <span class="hljs-type">BufferedReader</span> <span class="hljs-variable">br</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(pr.getInputStream()));<br>            String result;<br>            <span class="hljs-keyword">while</span> ((result = br.readLine()) != <span class="hljs-literal">null</span>) &#123;<br>                System.out.println(result);<br>            &#125;<br>            br.close();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125;<br>        System.out.println(<span class="hljs-string">&quot;--------------------------&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> dekun.wang.spi.interfaces.impl;<br><br><span class="hljs-keyword">import</span> dekun.wang.spi.interfaces.Command;<br><span class="hljs-keyword">import</span> org.apache.dubbo.common.extension.SPI;<br><br><span class="hljs-keyword">import</span> java.io.BufferedReader;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStreamReader;<br><span class="hljs-keyword">import</span> java.nio.charset.StandardCharsets;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> &lt;a href=&quot;mailto:wangdekunemail@gmail.com&quot;&gt;WangDeKun&lt;/a&gt;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span></span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@SPI(&quot;CommandWitchLs&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommandWitchLs</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Command</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">execute</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;==========================&quot;</span>);<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">ProcessBuilder</span> <span class="hljs-variable">processBuilder</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProcessBuilder</span>();<br>            processBuilder.command(<span class="hljs-string">&quot;which&quot;</span>, <span class="hljs-string">&quot;ls&quot;</span>);<br>            <span class="hljs-type">Process</span> <span class="hljs-variable">process</span> <span class="hljs-operator">=</span> processBuilder.start();<br>            <span class="hljs-keyword">try</span> (<span class="hljs-type">BufferedReader</span> <span class="hljs-variable">bufferedReader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(process.getInputStream(), StandardCharsets.UTF_8));) &#123;<br>                <span class="hljs-type">String</span> <span class="hljs-variable">line</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>                <span class="hljs-keyword">while</span> ((line = bufferedReader.readLine()) != <span class="hljs-literal">null</span>) &#123;<br>                    System.out.println(line);<br>                &#125;<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125;<br>        System.out.println(<span class="hljs-string">&quot;--------------------------&quot;</span>);<br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> dekun.wang.spi.interfaces.dubbo;<br><br><span class="hljs-keyword">import</span> org.apache.dubbo.common.extension.SPI;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> &lt;a href=&quot;mailto:wangdekunemail@gmail.com&quot;&gt;WangDeKun&lt;/a&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@SPI(&quot;CommandDubboImpl&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommandDubboImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">CommandDubbo</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">execute</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;============CommandDubboImpl================&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p> 资源目录配置</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">tree -NL 4 resources</span><br>resources<br>├── META-INF<br>│   ├── dubbo<br>│   │   ├── dekun.wang.spi.interfaces.Command # 文件名<br>│   │   └── internal<br>│   │       └── dekun.wang.spi.interfaces.Command # 文件名<br>│   ├── services<br>│   │   ├── dekun.wang.spi.interfaces.Command # 文件名<br>│   │   └── dekun.wang.spi.interfaces.dubbo.CommandDubbo # 文件名<br>│   └── spring.factories<br>└── application.properties<br></code></pre></td></tr></table></figure><h3 id="JDK-SPI"><a href="#JDK-SPI" class="headerlink" title="JDK SPI"></a>JDK SPI</h3><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><blockquote><p>resources 配置</p><p>创建<code>META-INF/services</code> 目录，新建以接口全路径命名的文件，文件内没行及实现类全路径类。</p><p><code>META-INF/services/dekun.wang.spi.interfaces.Command</code></p></blockquote><blockquote><p>行排序及迭代顺序</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">dekun.wang.spi.interfaces.impl.CommandWhichGit</span><br><span class="hljs-attr">dekun.wang.spi.interfaces.impl.CommandEnv</span><br><span class="hljs-attr">dekun.wang.spi.interfaces.impl.CommandWitchLs</span><br></code></pre></td></tr></table></figure><h4 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> dekun.wang.spi;<br><br><span class="hljs-keyword">import</span> dekun.wang.spi.interfaces.Command;<br><br><span class="hljs-keyword">import</span> java.util.ServiceLoader;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> &lt;a href=&quot;mailto:wangdekunemail@gmail.com&quot;&gt;WangDeKun&lt;/a&gt;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span></span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TestJdkSpi</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        ServiceLoader&lt;Command&gt; command = ServiceLoader.load(Command.class);<br>        <span class="hljs-keyword">for</span> (Command cmd : command) &#123;<br>            cmd.execute();<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">==========================<br>/usr/local/bin/git<br>--------------------------<br>==========================<br>Brew=/usr/local/bin:/usr/local/sbin<br>--------------------------<br>==========================<br>/bin/ls<br>--------------------------<br></code></pre></td></tr></table></figure><h3 id="Spring-SPI"><a href="#Spring-SPI" class="headerlink" title="Spring SPI"></a>Spring SPI</h3><h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><blockquote><p>resources 配置</p><p>目录创建 <code>META-INF</code>目录，并创建文件<code>spring.factories</code></p><p><code>META-INF/spring.factories</code></p></blockquote><blockquote><p><code>spring.factories</code>文件内容格式，加载顺序，及迭代顺序。</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">dekun.wang.spi.interfaces.Command</span>=<span class="hljs-string">\</span><br><span class="hljs-string">dekun.wang.spi.interfaces.impl.CommandWhichGit,\</span><br><span class="hljs-string">dekun.wang.spi.interfaces.impl.CommandEnv,\</span><br><span class="hljs-string">dekun.wang.spi.interfaces.impl.CommandWitchLs</span><br></code></pre></td></tr></table></figure><h4 id="测试类-1"><a href="#测试类-1" class="headerlink" title="测试类"></a>测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> dekun.wang.spi;<br><br><span class="hljs-keyword">import</span> dekun.wang.spi.interfaces.Command;<br><span class="hljs-keyword">import</span> org.springframework.core.io.support.SpringFactoriesLoader;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> &lt;a href=&quot;mailto:wangdekunemail@gmail.com&quot;&gt;WangDeKun&lt;/a&gt;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> &lt;p&gt;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TestSpringSpi</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">SpringFactoriesLoader</span> <span class="hljs-variable">springFactoriesLoader</span> <span class="hljs-operator">=</span> SpringFactoriesLoader.forDefaultResourceLocation(Command.class.getClassLoader());<br>        <span class="hljs-keyword">for</span> (Command command : springFactoriesLoader.load(Command.class)) &#123;<br>            command.execute();<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">==========================<br>/usr/local/bin/git<br>--------------------------<br>==========================<br>Brew=/usr/local/bin:/usr/local/sbin<br>--------------------------<br>==========================<br>/bin/ls<br>--------------------------<br></code></pre></td></tr></table></figure><h3 id="Dubbo-SPI"><a href="#Dubbo-SPI" class="headerlink" title="Dubbo SPI"></a><a href="https://cn.dubbo.apache.org/zh-cn/docsv2.7/dev/source/dubbo-spi/">Dubbo SPI</a></h3><h4 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h4><blockquote><p>文件名：接口全路径，内容 key（注解配置key）&#x3D;实现类全路径</p></blockquote><blockquote><p><code>META-INF/dubbo/internal/dekun.wang.spi.interfaces.Command</code></p><p>内容：<code>CommandWhichGit=dekun.wang.spi.interfaces.impl.CommandWhichGit</code></p></blockquote><blockquote><p><code>META-INF/dubbo/dekun.wang.spi.interfaces.Command</code></p><p>内容：</p><p> <code>CommandEnv=dekun.wang.spi.interfaces.impl.CommandEnv</code><br><code>CommandWitchLs=dekun.wang.spi.interfaces.impl.CommandWitchLs</code></p></blockquote><blockquote><p><code>META-INF/services/dekun.wang.spi.interfaces.dubbo.CommandDubbo</code></p><p>内容：<code>CommandDubboImpl=dekun.wang.spi.interfaces.dubbo.CommandDubboImpl</code></p></blockquote><h4 id="测试类-2"><a href="#测试类-2" class="headerlink" title="测试类"></a>测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> dekun.wang.spi;<br><br><span class="hljs-keyword">import</span> dekun.wang.spi.interfaces.Command;<br><span class="hljs-keyword">import</span> dekun.wang.spi.interfaces.dubbo.CommandDubbo;<br><span class="hljs-keyword">import</span> org.apache.dubbo.common.extension.ExtensionLoader;<br><span class="hljs-keyword">import</span> org.apache.dubbo.rpc.model.ApplicationModel;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> &lt;a href=&quot;mailto:wangdekunemail@gmail.com&quot;&gt;WangDeKun&lt;/a&gt;</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * 扫描以下路径</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * META-INF/dubbo/internal</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * META-INF/dubbo</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * META-INF/services</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span></span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TestDubboSpi</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        ExtensionLoader&lt;Command&gt; extensionLoader = ExtensionLoader.getExtensionLoader(Command.class);<br>        <span class="hljs-comment">//META-INF/dubbo/internal</span><br>        extensionLoader.getExtension(<span class="hljs-string">&quot;CommandWhichGit&quot;</span>).execute();<br>        <span class="hljs-comment">//META-INF/dubbo</span><br>        extensionLoader.getExtension(<span class="hljs-string">&quot;CommandEnv&quot;</span>).execute();<br>        <span class="hljs-comment">// META-INF/services</span><br>        ExtensionLoader.getExtensionLoader(CommandDubbo.class).getExtension(<span class="hljs-string">&quot;CommandDubboImpl&quot;</span>).execute();<br>        <span class="hljs-type">ApplicationModel</span> <span class="hljs-variable">applicationModel</span> <span class="hljs-operator">=</span> ApplicationModel.defaultModel();<br>        ExtensionLoader&lt;Command&gt; extensionLoader1 = applicationModel.getExtensionDirector().getExtensionLoader(Command.class);<br>        extensionLoader1.getExtension(<span class="hljs-string">&quot;CommandWitchLs&quot;</span>).execute();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">==========================<br>/usr/local/bin/git<br>--------------------------<br>==========================<br>Brew=/usr/local/bin:/usr/local/sbin<br>--------------------------<br>============CommandDubboImpl================<br>==========================<br>/bin/ls<br>--------------------------<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SPI-（Service-Provider-Interface）机制&quot;&gt;&lt;a href=&quot;#SPI-（Service-Provider-Interface）机制&quot; class=&quot;headerlink&quot; title=&quot;SPI （Service Provider In</summary>
      
    
    
    
    <category term="JAVA" scheme="https://blog.dekun.wang/categories/JAVA/"/>
    
    
    <category term="SPI" scheme="https://blog.dekun.wang/tags/SPI/"/>
    
  </entry>
  
  <entry>
    <title>OrbStack 与 Docker Desktop  造成 docker.sock 冲突问题</title>
    <link href="https://blog.dekun.wang/blog/a32b1858.html"/>
    <id>https://blog.dekun.wang/blog/a32b1858.html</id>
    <published>2023-05-30T14:01:46.000Z</published>
    <updated>2023-06-01T14:41:29.166Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OrbStack-与-Docker-Desktop-造成-docker-sock-冲突问题"><a href="#OrbStack-与-Docker-Desktop-造成-docker-sock-冲突问题" class="headerlink" title="OrbStack 与 Docker Desktop  造成 docker.sock 冲突问题"></a><a href="https://orbstack.dev/">OrbStack</a> 与 Docker Desktop  造成 docker.sock 冲突问题</h1><blockquote><p>OrbStack 集成了docker与Linux， 类似于虚拟机的APP</p></blockquote><blockquote><p>在终端会出现如下问题。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">docker ps</span><br>Cannot connect to the Docker daemon at unix:///Users/***/.docker/run/docker.sock. Is the docker daemon running?<br><span class="hljs-meta prompt_">#</span><span class="language-bash">或</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">docker ps</span><br>Cannot connect to the Docker daemon at unix:///Users/***/.orbstack/run/docker.sock. Is the docker daemon running?<br></code></pre></td></tr></table></figure><blockquote><p>解决方式</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker context use desktop-linux<br>docker context use orbstack<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">docker context <span class="hljs-built_in">ls</span></span><br>NAME              DESCRIPTION                               DOCKER ENDPOINT                               ERROR<br>default           Current DOCKER_HOST based configuration   unix:///var/run/docker.sock<br>desktop-linux *                                             unix:///Users/**/.docker/run/docker.sock<br>orbstack          OrbStack                                  unix:///Users/**/.orbstack/run/docker.sock<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">OrbStack 将默认docker.sock 链接到OrbStack 的docker.sock</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">sudo <span class="hljs-built_in">ln</span> -s ～/.docker/run/docker.sock /var/run/docker.sock</span> <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">docker context</span><br><br>Usage:  docker context COMMAND<br><br>Manage contexts<br><br>Commands:<br>  create      Create a context<br>  export      Export a context to a tar archive FILE or a tar stream on STDOUT.<br>  import      Import a context from a tar or zip file<br>  inspect     Display detailed information on one or more contexts<br>  ls          List contexts<br>  rm          Remove one or more contexts<br>  show        Print the name of the current context<br>  update      Update a context<br>  use         Set the current docker context<br><br>Run &#x27;docker context COMMAND --help&#x27; for more information on a command.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">------------------------</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 需要安装 jq 命令</span></span><br>alias dkd=&quot;jq &#x27;.currentContext=\&quot;desktop-linux\&quot;&#x27; ~/.docker/config.json &gt; ~/.docker/config.json_new &amp;&amp; rm ~/.docker/config.json &amp;&amp; mv ~/.docker/config.json_new ~/.docker/config.json&quot;<br>alias dko=&quot;jq &#x27;.currentContext=\&quot;orbstack\&quot;&#x27; ~/.docker/config.json &gt; ~/.docker/config.json_new &amp;&amp; rm ~/.docker/config.json &amp;&amp; mv ~/.docker/config.json_new ~/.docker/config.json&quot;<br></code></pre></td></tr></table></figure><blockquote><p>造成原因 <code>~/.docker/config.json</code>文件 的currentContext变量值</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">tree -NL 1  ~/.docker  ~/.docker/contexts/meta</span><br>/Users/***/.docker<br>├── application-template<br>├── bin<br>├── buildx<br>├── canary.json<br>├── certs.d<br>├── cli-plugins<br>├── config.json #需要修改的文件<br>├── contexts<br>├── daemon.json<br>├── devenvironments<br>├── features.json<br>├── run<br>└── scan<br>/Users/***/.docker/contexts/meta<br>├── 2d89b732b01a00a2d1675ed3cee9fd0f965daadf90603c989dd3afd4569c6896 #currentContext 变量的值<br>└── fe9c6bd7a66301f49ca9b6a70b217107cd1284598bfc254700c989b916da791e #currentContext 变量的值<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> ~/.docker/config.json | jq</span><br>&#123;<br>  &quot;auths&quot;: &#123;&#125;,<br>  &quot;credsStore&quot;: &quot;desktop&quot;,<br>  &quot;credHelpers&quot;: &#123;<br>    &quot;asia.gcr.io&quot;: &quot;gcloud&quot;,<br>    &quot;eu.gcr.io&quot;: &quot;gcloud&quot;,<br>    &quot;gcr.io&quot;: &quot;gcloud&quot;,<br>    &quot;marketplace.gcr.io&quot;: &quot;gcloud&quot;,<br>    &quot;staging-k8s.gcr.io&quot;: &quot;gcloud&quot;,<br>    &quot;us.gcr.io&quot;: &quot;gcloud&quot;<br>  &#125;,<br>  &quot;experimental&quot;: &quot;enabled&quot;,<br>  &quot;stackOrchestrator&quot;: &quot;swarm&quot;,<br>  &quot;currentContext&quot;: &quot;orbstack&quot; ##currentContext 导致 找不到 docker.sock<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Cannot connect to the Docker daemon at unix:///Users/***/.orbstack/run/docker.sock. Is the docker daemon running?</summary>
    
    
    
    <category term="备忘" scheme="https://blog.dekun.wang/categories/%E5%A4%87%E5%BF%98/"/>
    
    
    <category term="OrbStack" scheme="https://blog.dekun.wang/tags/OrbStack/"/>
    
    <category term="DockerDesktop" scheme="https://blog.dekun.wang/tags/DockerDesktop/"/>
    
  </entry>
  
  <entry>
    <title>Markdown超链接扩展</title>
    <link href="https://blog.dekun.wang/blog/893fdda9.html"/>
    <id>https://blog.dekun.wang/blog/893fdda9.html</id>
    <published>2023-05-11T04:17:18.000Z</published>
    <updated>2023-06-01T14:41:29.192Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Markdown-超链接扩展"><a href="#Markdown-超链接扩展" class="headerlink" title="Markdown 超链接扩展"></a>Markdown 超链接扩展</h2><blockquote><p> 效果：<a href="https://hexo.io/zh-cn/api/injector?_blank/" title="Iinjector文档">Hexo Iinjector文档</a></p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">//原始语法：[<span class="hljs-string">超链接的名字</span>](<span class="hljs-link">url/&quot;FloatTitle&quot;</span>)<br>//在新窗口中打开：[<span class="hljs-string">超链接的名字</span>](<span class="hljs-link">url?_blank/&quot;FloatTitle&quot;</span>)<br>//在本窗口中打开：[<span class="hljs-string">超链接的名字</span>](<span class="hljs-link">url?_self/&quot;FloatTitle&quot;</span>)<br></code></pre></td></tr></table></figure><div class="note note-info">            <p>扩展方法</p><p>在<code>scripts/injector.js</code>创建自定义名字的js文件。添加如下内容。</p>          </div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> scriptMarkdownA = <span class="hljs-string">&quot;&lt;script&gt;\n&quot;</span> +<br>    <span class="hljs-string">&quot;    var aTagArr = [].slice.apply(document.getElementsByTagName(\&quot;a\&quot;));\n&quot;</span> +<br>    <span class="hljs-string">&quot;    aTagArr.forEach(function (e, i) &#123;\n&quot;</span> +<br>    <span class="hljs-string">&quot;    e.href.indexOf(\&quot;_blank\&quot;) &gt; -1 ? e.target = \&quot;_blank\&quot; : null;\n&quot;</span> +<br>    <span class="hljs-string">&quot;&#125;);\n&quot;</span> +<br>    <span class="hljs-string">&quot;&lt;/script&gt;&quot;</span>;<br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;body_end&#x27;</span>, scriptMarkdownA, <span class="hljs-string">&#x27;post&#x27;</span>);<br></code></pre></td></tr></table></figure><div class="note note-info">            <p>目录结构</p>          </div><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">public<br>source<br><span class="hljs-keyword">scripts</span><br><span class="hljs-keyword"></span>└── injector.<span class="hljs-keyword">js</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">scaffolds</span><br><span class="hljs-keyword"></span>package.<span class="hljs-keyword">json</span><br><span class="hljs-keyword"></span>themes<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Markdown-超链接扩展&quot;&gt;&lt;a href=&quot;#Markdown-超链接扩展&quot; class=&quot;headerlink&quot; title=&quot;Markdown 超链接扩展&quot;&gt;&lt;/a&gt;Markdown 超链接扩展&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt; 效果：&lt;a hr</summary>
      
    
    
    
    <category term="Blog" scheme="https://blog.dekun.wang/categories/Blog/"/>
    
    
    <category term="Markdown" scheme="https://blog.dekun.wang/tags/Markdown/"/>
    
    <category term="Blog" scheme="https://blog.dekun.wang/tags/Blog/"/>
    
    <category term="Hexo" scheme="https://blog.dekun.wang/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Mac编译OpenJdk源码</title>
    <link href="https://blog.dekun.wang/blog/19ecb602.html"/>
    <id>https://blog.dekun.wang/blog/19ecb602.html</id>
    <published>2023-05-09T05:54:06.000Z</published>
    <updated>2023-06-01T14:41:29.219Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MacOs编译OpenJDK"><a href="#MacOs编译OpenJDK" class="headerlink" title="MacOs编译OpenJDK"></a>MacOs编译OpenJDK</h1><div class="note note-warning">            <ul><li>未强调目录，即本地仓库根目录</li><li>编译Git Tag：jdk-21+21   # 本想编译jdk17，奈何17版本报错太多，无法解决，怀疑是xcode或系统版本问题，索性目前最新。</li></ul>          </div><div class="note note-primary">            <p>点击下面按钮跳转相关文档</p>          </div><a class="btn" href="https://openjdk.org/"  title="OpenJDK" target="_blank">OpenJDK官网地址</a> <a class="btn" href="https://openjdk.org/groups/build/doc/building.html"  title="Building the JDK" target="_blank">构建JDK文档</a>    <a class="btn" href="https://htmlpreview.github.io/?https://raw.githubusercontent.com/openjdk/jdk/master/doc/building.html"  title="Building the JDK" target="_blank">构建JDK文档</a> <a class="btn" href="https://blog.jetbrains.com/clion/2020/03/openjdk-with-clion/"  title="Develop OpenJDK in CLion with Pleasure" target="_blank">Clion博客关于OpenJDK开发的内容</a><hr><h2 id="获取OpenJDK"><a href="#获取OpenJDK" class="headerlink" title="获取OpenJDK"></a>获取OpenJDK</h2> <a class="btn" href="https://github.com/openjdk/jdk/"  title="OpenJDK GitHub" target="_blank">源码仓库地址</a> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone https://github.com/openjdk/jdk.git<br></code></pre></td></tr></table></figure><h2 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h2><ul><li><p>软件环境  （参考官网文档，自行安装。MacOs 推荐使用brew）</p><ul><li><p>macos  Ventura 13.3.1 (a)</p></li><li><p><code>xcodebuild -version </code>   : Xcode 14.3</p></li><li><p><code>xcode-select -v</code> :  xcode-select version 2397.</p></li><li><p><code>/Library/Java/JavaVirtualMachines/jdk-20.jdk/Contents/Home</code></p></li><li><p><code>clang --version</code></p><blockquote><p>Apple clang version 14.0.3 (clang-1403.0.22.14.1)<br>Target: x86_64-apple-darwin22.4.0<br>Thread model: posix<br>InstalledDir: &#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer&#x2F;Toolchains&#x2F;XcodeDefault.xctoolchain&#x2F;usr&#x2F;bin</p></blockquote></li><li><p><code>  clang++ --version</code></p><blockquote><p>Apple clang version 14.0.3 (clang-1403.0.22.14.1)<br>Target: x86_64-apple-darwin22.4.0<br>Thread model: posix<br>InstalledDir: &#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer&#x2F;Toolchains&#x2F;XcodeDefault.xctoolchain&#x2F;usr&#x2F;bin</p></blockquote></li><li><p><code> autoconf --version</code> : autoconf (GNU Autoconf) 2.71 <code># brew install autoconf</code></p></li><li><p><code>freetype-config --ftversion</code> : 2.13.0  <code># brew install freetype</code></p></li><li><p><code>make --version</code> : GNU Make 3.81   <code># brew install make</code></p></li><li><p><code>ccache -V</code> :    ccache version 4.8   <code># brew install ccache</code></p></li></ul></li><li><p>硬件 ：MacBook Pro ;  2.6 GHz 六核Intel Core i7 ； 内存 16 GB 2400 MHz DDR4</p></li></ul><hr><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><h3 id="configure"><a href="#configure" class="headerlink" title="configure"></a><a href="8dd8a18f" target="_blank">configure</a></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 获取配置参数帮助</span><br>$ bash configure --<span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">bash configure \<br>--with-debug-level=slowdebug  \<br>--with-jvm-variants=server  \<br>--with-target-bits=64 \<br>--with-boot-jdk=<span class="hljs-variable">$JAVA_20_HOME</span><br></code></pre></td></tr></table></figure><ul><li><p>–with-debug-level&#x3D;slowdebug #可选：release、fastdebug、slowdebug，越靠后debug信息越多，优化越少。</p></li><li><p>–with-jvm-variants&#x3D;server  #jvm模式：server、client、minimal、core、zero、custom</p></li><li><p>–with-target-bits&#x3D;64   #指定编译32位还是64位的JVM</p></li><li><p>–with-boot-jdk&#x3D;$JAVA_20_HOME  # 系统export 配置的环境变量，我使用的是jdk20</p></li></ul><div class="note note-primary">            <p>补充</p><ul><li>–with-conf-name&#x3D;jdk-21+22-slowdebug   自定义名字，执行<code>make</code>指令，增加<code>CONF=jdk-21+22-slowdebug</code> 参数。例如<code>make CONF=jdk-21+22-slowdebug images</code></li></ul>          </div>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ java --version<br>java 20.0.1 2023-04-18<br>Java(TM) SE Runtime Environment (build 20.0.1+9-29)<br>Java HotSpot(TM) 64-Bit Server VM (build 20.0.1+9-29, mixed mode, sharing)<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>configure 结果</p>          </div><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs gradle">====================================================<br>A <span class="hljs-keyword">new</span> configuration has been successfully created in<br><span class="hljs-regexp">/Users/</span>*<span class="hljs-regexp">/openjdk/</span>build/macosx-x86_64-server-slowdebug<br>using configure arguments <span class="hljs-string">&#x27;--with-debug-level=slowdebug --with-jvm-variants=server --with-target-bits=64 --with-boot-jdk=/Library/Java/JavaVirtualMachines/jdk-20.jdk/Contents/Home&#x27;</span>.<br><br>Configuration summary:<br>* Name:           macosx-x86_64-server-slowdebug<br>* Debug level:    slowdebug<br>* HS debug level: debug<br>* JVM variants:   server<br>* JVM features:   server: <span class="hljs-string">&#x27;cds compiler1 compiler2 dtrace epsilongc g1gc jfr jni-check jvmci jvmti management parallelgc serialgc services shenandoahgc vm-structs zgc&#x27;</span><br>* OpenJDK target: OS: macosx, CPU architecture: x86, address length: <span class="hljs-number">64</span><br>* Version string: <span class="hljs-number">21</span>-internal-adhoc.wdk.openjdk (<span class="hljs-number">21</span>-internal)<br>* <span class="hljs-keyword">Source</span> date:    <span class="hljs-number">1683614002</span> (<span class="hljs-number">2023</span>-<span class="hljs-number">05</span>-<span class="hljs-number">09</span>T06:<span class="hljs-number">33</span>:<span class="hljs-number">22</span>Z)<br><br>Tools summary:<br>* Boot JDK:       java version <span class="hljs-string">&quot;20.0.1&quot;</span> <span class="hljs-number">2023</span>-<span class="hljs-number">04</span>-<span class="hljs-number">18</span> Java(TM) SE <span class="hljs-keyword">Runtime</span> Environment (build <span class="hljs-number">20.0</span>.<span class="hljs-number">1</span>+<span class="hljs-number">9</span>-<span class="hljs-number">29</span>) Java HotSpot(TM) <span class="hljs-number">64</span>-Bit Server VM (build <span class="hljs-number">20.0</span>.<span class="hljs-number">1</span>+<span class="hljs-number">9</span>-<span class="hljs-number">29</span>, mixed mode, sharing) (at <span class="hljs-regexp">/Library/</span>Java<span class="hljs-regexp">/JavaVirtualMachines/</span>jdk-<span class="hljs-number">20</span>.jdk<span class="hljs-regexp">/Contents/</span>Home)<br>* Toolchain:      clang (clang/LLVM <span class="hljs-keyword">from</span> Xcode <span class="hljs-number">14.3</span>)<br>* Sysroot:        <span class="hljs-regexp">/Applications/</span>Xcode.app<span class="hljs-regexp">/Contents/</span>Developer<span class="hljs-regexp">/Platforms/M</span>acOSX.platform<span class="hljs-regexp">/Developer/</span>SDKs/MacOSX13.<span class="hljs-number">3</span>.sdk<br>* C Compiler:     Version <span class="hljs-number">14.0</span>.<span class="hljs-number">3</span> (at <span class="hljs-regexp">/usr/</span>bin/clang)<br>* C++ Compiler:   Version <span class="hljs-number">14.0</span>.<span class="hljs-number">3</span> (at <span class="hljs-regexp">/usr/</span>bin/clang++)<br><br>Build performance summary:<br>* Build jobs:     <span class="hljs-number">12</span><br>* Memory limit:   <span class="hljs-number">16384</span> MB<br><br>The following warnings were produced. Repeated here <span class="hljs-keyword">for</span> convenience:<br>WARNING: pandoc is version <span class="hljs-number">2.18</span>, not the recommended version <span class="hljs-number">2.19</span>.<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><blockquote><p><code>build</code>目录生成如下目录。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ tree -NL 1 build .<br>build<br>└── macosx-x86_64-server-slowdebug  <span class="hljs-comment"># configure 之后生成的目录，之后编译结果存放在此</span><br>.<br>├── ADDITIONAL_LICENSE_INFO<br>├── ASSEMBLY_EXCEPTION<br>├── CONTRIBUTING.md<br>├── LICENSE<br>├── Makefile<br>├── README.md<br>├── bin<br>├── build<br>├── compile_commands.json<br>├── configure<br>├── doc<br>├── make<br>├── src<br>└── <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><h3 id="make"><a href="#make" class="headerlink" title="make"></a>make</h3><p> <code>make  [Targets]</code><sup id="fnref:Targets文档" class="footnote-ref"><a href="#fn:Targets文档" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://hg.openjdk.org/jdk/jdk11/raw-file/tip/doc/building.html#common-make-targets">[Targets文档]</span></a></sup>  </p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vim"># 全量编译<br>$ <span class="hljs-keyword">make</span> <span class="hljs-keyword">all</span><br>Building target <span class="hljs-string">&#x27;all&#x27;</span> in configuration <span class="hljs-string">&#x27;macosx-x86_64-server-slowdebug&#x27;</span><br>Compiling <span class="hljs-keyword">up</span> <span class="hljs-keyword">to</span> <span class="hljs-number">1</span> <span class="hljs-keyword">files</span> <span class="hljs-keyword">for</span> BUILD_TOOLS_HOTSPOT<br>..........<br># 需要一段时间 ，这里省略<span class="hljs-keyword">N</span>行信息<br>..........<br>Compiling <span class="hljs-keyword">up</span> <span class="hljs-keyword">to</span> <span class="hljs-number">2</span> <span class="hljs-keyword">files</span> <span class="hljs-keyword">for</span> CLASSLIST_JAR<br>Creating support/classlist.jar<br>Creating jdk.jlink.jmod<br>Creating java.base.jmod<br>Creating jdk image<br>Creating CDS archive <span class="hljs-keyword">for</span> jdk image <span class="hljs-keyword">for</span> server<br>Creating CDS-NOCOOPS archive <span class="hljs-keyword">for</span> jdk image <span class="hljs-keyword">for</span> server<br>Stopping javac server<br>Finished building target <span class="hljs-string">&#x27;all&#x27;</span> in configuration <span class="hljs-string">&#x27;macosx-x86_64-server-slowdebug&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">$ ./build/macosx-x86_64-<span class="hljs-keyword">server</span>-slowdebug/jdk/bin/java  <span class="hljs-comment">--version</span><br>openjdk <span class="hljs-number">21</span>-<span class="hljs-type">internal</span> <span class="hljs-number">2023</span><span class="hljs-number">-09</span><span class="hljs-number">-19</span><br>OpenJDK Runtime Environment (slowdebug build <span class="hljs-number">21</span>-<span class="hljs-type">internal</span>-adhoc.wdk.openjdk)<br>OpenJDK <span class="hljs-number">64</span>-<span class="hljs-type">Bit</span> <span class="hljs-keyword">Server</span> VM (slowdebug build <span class="hljs-number">21</span>-<span class="hljs-type">internal</span>-adhoc.wdk.openjdk, mixed mode)<br></code></pre></td></tr></table></figure><h2 id="导入Clion"><a href="#导入Clion" class="headerlink" title="导入Clion"></a>导入Clion</h2><h3 id="compile-commands-json"><a href="#compile-commands-json" class="headerlink" title="compile-commands.json"></a>compile-commands.json</h3><blockquote><p> 生成 compile-commands.json ，Compile Commands参考Clion<sup id="fnref:彩蛋" class="footnote-ref"><a href="#fn:彩蛋" rel="footnote"><span class="hint--top hint--rounded" aria-label="来源网络的激活工具 https://ffff.ga/">[彩蛋]</span></a></sup>文档<sup id="fnref:jetbrains" class="footnote-ref"><a href="#fn:jetbrains" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.jetbrains.com/help/fleet/generating-a-json-compilation-database.html">[jetbrains]</span></a></sup></p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim">$ <span class="hljs-keyword">make</span> compile-commands<br>Building target <span class="hljs-string">&#x27;compile-commands&#x27;</span> in configuration <span class="hljs-string">&#x27;macosx-x86_64-server-slowdebug&#x27;</span><br>Cleaning compile-commands <span class="hljs-keyword">make</span> support artifacts ... done<br>Updating compile_commands.json<br>Finished building target <span class="hljs-string">&#x27;compile-commands&#x27;</span> in configuration <span class="hljs-string">&#x27;macosx-x86_64-server-slowdebug&#x27;</span><br><br>#  <span class="hljs-keyword">make</span> compile-commands 再 <span class="hljs-keyword">make</span> <span class="hljs-keyword">all</span> 生成的compile_commands.json  也可以<br></code></pre></td></tr></table></figure><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><ol><li><p>使用Clion打开目录 <code>./build/macosx-x86_64-server-slowdebug/compile_commands.json</code> 文件。</p></li><li><p>使用项目打开，等待Clion完成项目索引扫描</p></li><li><p>更改项目根目录为OpenJDK根目录，等待重新扫描索引。如下图</p></li></ol><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/1.png" alt="根据compile_commands.json导入项目"></div><div class="group-image-wrap"><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/2.png" alt="项目打开方式"></div><div class="group-image-wrap"><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/3.png" alt="更改根目录"></div></div></div><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="配置外部工具"><a href="#配置外部工具" class="headerlink" title="配置外部工具"></a>配置外部工具</h4><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/ExtendedTools.png" alt="ExtendedTools"></p><ul><li><p><code>make all</code></p><blockquote><p>#Program 和 Arguments 共同构成了所要执行的命令 “make all”</p><p>Name: make<br>Program: make<br>Arguments: all<br>Working directory: {项目的根目录&#x2F;本地openjdk位置}</p></blockquote></li><li><p><code>make clean</code> 配置同 <code>make all</code></p></li><li><p><code>make images</code> 配置 同 <code>make all</code></p></li><li><p><code>make</code> 配置同 <code>make all</code></p></li></ul><h4 id="运行-x2F-调试配置-（Run-x2F-Debug-configuration）"><a href="#运行-x2F-调试配置-（Run-x2F-Debug-configuration）" class="headerlink" title="运行&#x2F;调试配置 （Run&#x2F;Debug configuration）"></a>运行&#x2F;调试配置 （Run&#x2F;Debug configuration）</h4><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/RunDebugConfiguration.png" alt="RunDebugConfiguration"></p><ul><li><p>Run&#x2F;Debug configuration</p><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/Configuration.png" alt="Configuration"></p></li><li><p>编译jdk，修改jdk源码后编译源码使用。</p><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/make-images.png" alt="make-images"></p></li></ul><p>运行Debug</p><ul><li><p>Debug入口 <code>src/java.base/share/native/libjli/java.c</code> 第391行</p><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/debug-openjdk.png" alt="debug-openjdk"></p></li><li><p>Debug出现  <a href="#lldb%E6%8A%A5%E9%94%99%EF%BC%9ASIGSEGV-signal-SIGSEGV-%EF%BC%88%E6%B6%89%E5%8F%8A%E5%88%B0C-x2F-C-%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9%EF%BC%8C%E4%B8%8D%E6%98%8E%E6%89%80%E4%BB%A5%EF%BC%8C%E5%AE%8C%E5%85%A8%E6%98%AF%E7%85%A7%E7%8C%AB%E7%94%BB%E8%99%8E%EF%BC%89">SIGSEGV (signal SIGSEGV) </a></p></li></ul><h2 id="IDEA-引用-Native-OpenJDK"><a href="#IDEA-引用-Native-OpenJDK" class="headerlink" title="IDEA 引用 Native OpenJDK"></a>IDEA 引用 Native OpenJDK</h2><ol><li><h3 id="IDEA-新建工程，并修改JDK为编译好的jdk（-build-macosx-x86-64-server-slowdebug-images-），将源码修改为OpenJdk根目录下的src目录。"><a href="#IDEA-新建工程，并修改JDK为编译好的jdk（-build-macosx-x86-64-server-slowdebug-images-），将源码修改为OpenJdk根目录下的src目录。" class="headerlink" title="IDEA 新建工程，并修改JDK为编译好的jdk（ build/macosx-x86_64-server-slowdebug/images/），将源码修改为OpenJdk根目录下的src目录。"></a>IDEA 新建工程，并修改JDK为编译好的jdk（<code> build/macosx-x86_64-server-slowdebug/images/</code>），将源码修改为OpenJdk根目录下的src目录。</h3><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/SDK1.png" alt="SDK1"></div><div class="group-image-wrap"><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/SDK2.png" alt="SDK2"></div></div></div></li><li><h3 id="修改jdk代码"><a href="#修改jdk代码" class="headerlink" title="修改jdk代码"></a>修改jdk代码</h3><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/MAIN.png" alt="MAIN"></p></li><li><h3 id="执行-make-images-编译jdk"><a href="#执行-make-images-编译jdk" class="headerlink" title="执行 make images 编译jdk"></a>执行 make images 编译jdk</h3><blockquote><p>源码更目录执行<code>make images</code> 或在CLion执行预先配置好的make images即可。</p></blockquote><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/run-make-images1.png" alt="run-make-images1"></div><div class="group-image-wrap"><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/run-make-images2.png" alt="run-make-images1"></div></div></div></li><li><h3 id="运行测试代码看修改效果"><a href="#运行测试代码看修改效果" class="headerlink" title="运行测试代码看修改效果"></a>运行测试代码看修改效果</h3><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/result.png" alt="result"></p></li></ol><h2 id="异常问题"><a href="#异常问题" class="headerlink" title="异常问题"></a>异常问题</h2><h3 id="error-unmappable-character-0xE6-for-encoding-ascii"><a href="#error-unmappable-character-0xE6-for-encoding-ascii" class="headerlink" title="error: unmappable character (0xE6) for encoding ascii"></a>error: unmappable character (0xE6) for encoding ascii</h3><div class="note note-danger">            <p><code>make/common/JavaCompilation.gmk</code>文件，274行将 <code>ascii</code> 修改为<code>utf-8</code></p><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/ascii_to_utf8.png" alt="ascii_to_utf8"></p>          </div><h3 id="Library-not-loaded-x2F-usr-x2F-local-x2F-lib-x2F-libgvc-6-dylib-错误信息"><a href="#Library-not-loaded-x2F-usr-x2F-local-x2F-lib-x2F-libgvc-6-dylib-错误信息" class="headerlink" title="Library not loaded: &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libgvc.6.dylib 错误信息"></a>Library not loaded: &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libgvc.6.dylib 错误信息</h3><div class="note note-danger">            <p>Library not loaded: &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libgvc.6.dylib 错误信息</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">dyld[<span class="hljs-number">77415</span>]: Library not loaded: <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/</span>libgvc.<span class="hljs-number">6</span>.dylib<br>  Referenced <span class="hljs-keyword">from</span>: &lt;<span class="hljs-number">1</span>F936113-F892-<span class="hljs-number">345</span>E-A9E8-<span class="hljs-number">0</span>F93B969392C&gt; <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>dot<br>  Reason: tried: <span class="hljs-string">&#x27;/usr/local/lib/libgvc.6.dylib&#x27;</span> (no such <span class="hljs-keyword">file</span>), <span class="hljs-string">&#x27;/System/Volumes/Preboot/Cryptexes/OS/usr/local/lib/libgvc.6.dylib&#x27;</span> (no such <span class="hljs-keyword">file</span>), <span class="hljs-string">&#x27;/usr/local/lib/libgvc.6.dylib&#x27;</span> (no such <span class="hljs-keyword">file</span>), <span class="hljs-string">&#x27;/usr/lib/libgvc.6.dylib&#x27;</span> (no such <span class="hljs-keyword">file</span>, not in dyld cache)<br><br></code></pre></td></tr></table></figure>          </div><div class="note note-success">            <p><del>解决方式   :  将 <a href="https://graphviz.org/download/#mac">graphviz</a><sup id="fnref:graphviz官网" class="footnote-ref"><a href="#fn:graphviz官网" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://graphviz.org/download/#mac">[graphviz官网]</span></a></sup>的 lib目录下 <code>.dylib</code>  文件映射到  <code>/usr/local/lib/</code> 目录下</del></p><p> 解决方式：执行以下命令即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew install graphviz<br>brew link graphviz <br><span class="hljs-meta prompt_">#</span><span class="language-bash">或</span><br>brew link --overwrite graphviz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">-------------------------------------------------------</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">-------------------------------------------------------</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">-------------------------------------------------------</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如有以下错误</span><br>brew link --overwrite graphviz<br>Linking /usr/local/Cellar/graphviz/8.0.5...<br>Error: Could not symlink lib/graphviz/config6<br>/usr/local/lib/graphviz is not writable.<br><span class="hljs-meta prompt_"># </span><span class="language-bash">执行 <span class="hljs-built_in">chown</span> 根据实际情况更改</span><br>sudo chown -R &#x27;用户名:admin&#x27; /usr/local/lib/graphviz<br></code></pre></td></tr></table></figure><div class="note note-danger">            <p><del>寻找到的变相解决方式，反正是意外的解决了<code>make all</code> 报错的问题。</del></p><blockquote><p> <del>感觉不是最终解决方式，但有没有更好的方式，如看到此贴的人知道，麻烦请告知一下更好的解决方案。</del></p><p>📮邮箱 :  <a href="mailto:&#x77;&#97;&#110;&#103;&#100;&#x65;&#x6b;&#x75;&#x6e;&#101;&#109;&#97;&#x69;&#x6c;&#64;&#x67;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;">&#x77;&#97;&#110;&#103;&#100;&#x65;&#x6b;&#x75;&#x6e;&#101;&#109;&#97;&#x69;&#x6c;&#64;&#x67;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;</a></p></blockquote>          </div><blockquote><p><del>ln -s &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;graphviz&#x2F;8.0.5&#x2F;lib&#x2F;libcdt.5.dylib  &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libcdt.5.dylib</del><br><del>ln -s &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;graphviz&#x2F;8.0.5&#x2F;lib&#x2F;libcgraph.6.dylib &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libcgraph.6.dylib</del><br><del>ln -s &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;graphviz&#x2F;8.0.5&#x2F;lib&#x2F;libgvc.6.dylib &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libgvc.6.dylib</del><br><del>ln -s &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;graphviz&#x2F;8.0.5&#x2F;lib&#x2F;libgvpr.2.dylib &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libgvpr.2.dylib</del><br><del>ln -s &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;graphviz&#x2F;8.0.5&#x2F;lib&#x2F;liblab_gamut.1.dylib &#x2F;usr&#x2F;local&#x2F;lib&#x2F;liblab_gamut.1.dylib</del><br><del>ln -s &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;grahviz&#x2F;8.0.5&#x2F;lib&#x2F;libpathplan.4.dylib &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libpathplan.4.dylib</del><br><del>ln -s &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;graphviz&#x2F;8.0.5&#x2F;lib&#x2F;libxdot.4.dylib &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libxdot.4.dylib</del></p></blockquote>          </div><h3 id="lldb报错：SIGSEGV-signal-SIGSEGV-（涉及到C-x2F-C-相关内容，不明所以，完全是照猫画虎）"><a href="#lldb报错：SIGSEGV-signal-SIGSEGV-（涉及到C-x2F-C-相关内容，不明所以，完全是照猫画虎）" class="headerlink" title="lldb报错：SIGSEGV (signal SIGSEGV)  （涉及到C&#x2F;C++相关内容，不明所以，完全是照猫画虎）"></a>lldb<code>报错：</code>SIGSEGV (signal SIGSEGV)  （涉及到C&#x2F;C++相关内容，不明所以，完全是照猫画虎）</h3><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/SIGSEGV.png" alt="iShot_2023-05-10_01.10.55"></p><blockquote><p>解决办法是，在用户家目录创建<code>.lldbinit</code>，内容如下：</p></blockquote><ul><li><p>第一种方法<sup id="fnref:lldbinit1" class="footnote-ref"><a href="#fn:lldbinit1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://blog.jetbrains.com/clion/2020/03/openjdk-with-clion/">[lldbinit1]</span></a></sup></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 在compile_commands.json 同级目录添加经过测试无效，需要在系统 `~/.lldbinit`目录下新建，原因未知。</span><br>br <span class="hljs-built_in">set</span> -n main -o <span class="hljs-literal">true</span> -G <span class="hljs-literal">true</span> -C <span class="hljs-string">&quot;pro hand -p true -s false SIGSEGV SIGBUS&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>第二种方法<sup id="fnref:lldbinit2" class="footnote-ref"><a href="#fn:lldbinit2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.jianshu.com/p/e7891d25ba6a">[lldbinit2]</span></a></sup></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">#main.c是本地绝对路径<br>breakpoint set --<span class="hljs-keyword">file</span> <span class="hljs-regexp">/Users/</span>..<span class="hljs-regexp">/openjdk/</span>src<span class="hljs-regexp">/java.base/</span>share<span class="hljs-regexp">/native/</span>launcher/main.c --line <span class="hljs-number">98</span> -C <span class="hljs-string">&quot;pro hand -p true -s false SIGSEGV SIGBUS&quot;</span> --auto-<span class="hljs-keyword">continue</span> <span class="hljs-keyword">true</span><br></code></pre></td></tr></table></figure></li><li><p>第三种方法<sup id="fnref:lldbinit3" class="footnote-ref"><a href="#fn:lldbinit3" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://jiawanggjia.github.io/post/openjdk-bian-yi-zhi-nan/">[lldbinit3]</span></a></sup> </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">break set -n <span class="hljs-selector-tag">main</span> -C &quot;process handle <span class="hljs-attr">--pass</span> true <span class="hljs-attr">--stop</span> false SIGSEGV&quot; -C &quot;process handle <span class="hljs-attr">--pass</span> true <span class="hljs-attr">--stop</span> false SIGBUS&quot;<br></code></pre></td></tr></table></figure></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><blockquote><p>关于在网上看到如下命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">bash configure <span class="hljs-attribute">--with-debug-level</span>=slowdebug <span class="hljs-attribute">--with-jvm-variants</span>=server<br>make <span class="hljs-attribute">CONF</span>=macosx-x86_64-server-slowdebug compile-commands<br>make <span class="hljs-attribute">CONF</span>=macosx-x86_64-server-slowdebug<br></code></pre></td></tr></table></figure><p>关于CONF参数的作用，如果build目录下面只有一个配置信息，则可以省略。</p></blockquote><div class="note note-primary">            <p>补充说明 <code>CONF=&lt;config pattern&gt; </code> </p><p><a href="https://hg.openjdk.org/jdk/jdk11/raw-file/tip/doc/building.html#using-multiple-configurations">点击查看CONF官方文档</a></p><p>出自文件：<code>./make/InitSupport.gmk</code>  第245行</p><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/sourceCode/openJdk/compileEnv/CONF=.png" alt="CONF="></p>          </div><section class="footnotes"><h2 id="Reference"> <a class="anchorjs-link anchorjs-link-left" aria-label="Anchor" data-anchorjs-icon="❡" href="#Reference"  style="position: absolute; margin-left: -1em; padding-right: 0.5em;"> </a><a href="#Reference" class="headerlink" title="Reference"> </a>参考</h2><div class="footnote-list"><ol><li><span id="fn:Targets文档" class="footnote-text"><span><span style="font-weight: bold;font-style:italic;">Targets文档：</span><a href="https://hg.openjdk.org/jdk/jdk11/raw-file/tip/doc/building.html#common-make-targets">https://hg.openjdk.org/jdk/jdk11/raw-file/tip/doc/building.html#common-make-targets</a><a href="#fnref:Targets文档" rev="footnote" class="footnote-backref">↩</a></span></span></li><li><span id="fn:jetbrains" class="footnote-text"><span><span style="font-weight: bold;font-style:italic;">jetbrains：</span><a href="https://www.jetbrains.com/help/fleet/generating-a-json-compilation-database.html">https://www.jetbrains.com/help/fleet/generating-a-json-compilation-database.html</a><a href="#fnref:jetbrains" rev="footnote" class="footnote-backref">↩</a></span></span></li><li><span id="fn:彩蛋" class="footnote-text"><span><span style="font-weight: bold;font-style:italic;">彩蛋：</span>来源网络的激活工具 <a href="https://ffff.ga/">https://ffff.ga/</a><a href="#fnref:彩蛋" rev="footnote" class="footnote-backref">↩</a></span></span></li><li><span id="fn:graphviz官网" class="footnote-text"><span><span style="font-weight: bold;font-style:italic;">graphviz官网：</span><a href="https://graphviz.org/download/#mac">https://graphviz.org/download/#mac</a><a href="#fnref:graphviz官网" rev="footnote" class="footnote-backref">↩</a></span></span></li><li><span id="fn:lldbinit1" class="footnote-text"><span><span style="font-weight: bold;font-style:italic;">lldbinit1：</span><a href="https://blog.jetbrains.com/clion/2020/03/openjdk-with-clion/">https://blog.jetbrains.com/clion/2020/03/openjdk-with-clion/</a><a href="#fnref:lldbinit1" rev="footnote" class="footnote-backref">↩</a></span></span></li><li><span id="fn:lldbinit2" class="footnote-text"><span><span style="font-weight: bold;font-style:italic;">lldbinit2：</span><a href="https://www.jianshu.com/p/e7891d25ba6a">https://www.jianshu.com/p/e7891d25ba6a</a><a href="#fnref:lldbinit2" rev="footnote" class="footnote-backref">↩</a></span></span></li><li><span id="fn:lldbinit3" class="footnote-text"><span><span style="font-weight: bold;font-style:italic;">lldbinit3：</span><a href="https://jiawanggjia.github.io/post/openjdk-bian-yi-zhi-nan/">https://jiawanggjia.github.io/post/openjdk-bian-yi-zhi-nan/</a><a href="#fnref:lldbinit3" rev="footnote" class="footnote-backref">↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MacOs编译OpenJDK&quot;&gt;&lt;a href=&quot;#MacOs编译OpenJDK&quot; class=&quot;headerlink&quot; title=&quot;MacOs编译OpenJDK&quot;&gt;&lt;/a&gt;MacOs编译OpenJDK&lt;/h1&gt;&lt;div class=&quot;note note-war</summary>
      
    
    
    
    <category term="源码" scheme="https://blog.dekun.wang/categories/%E6%BA%90%E7%A0%81/"/>
    
    <category term="OpenJDK" scheme="https://blog.dekun.wang/categories/%E6%BA%90%E7%A0%81/OpenJDK/"/>
    
    
    <category term="源码" scheme="https://blog.dekun.wang/tags/%E6%BA%90%E7%A0%81/"/>
    
    <category term="OpenJDK" scheme="https://blog.dekun.wang/tags/OpenJDK/"/>
    
  </entry>
  
  <entry>
    <title>idea 欢迎屏幕最近的项目开始组 扩展</title>
    <link href="https://blog.dekun.wang/blog/a428dd75.html"/>
    <id>https://blog.dekun.wang/blog/a428dd75.html</id>
    <published>2023-04-25T11:57:30.000Z</published>
    <updated>2023-06-01T14:41:29.196Z</updated>
    
    <content type="html"><![CDATA[<h1 id="idea-欢迎界面项目列表右键打开终端"><a href="#idea-欢迎界面项目列表右键打开终端" class="headerlink" title="idea 欢迎界面项目列表右键打开终端"></a>idea 欢迎界面项目列表右键打开终端</h1><h2 id="效果、仓库"><a href="#效果、仓库" class="headerlink" title="效果、仓库"></a>效果、仓库</h2><div class="note note-success">            <p>效果图如下，<a href="https://github.com/wdkGitHub/WelcomeScreenRecentProjectActionGroupExt">仓库地址:https://github.com/wdkGitHub/WelcomeScreenRecentProjectActionGroupExt</a> </p>          </div><a class="btn" href="https://github.com/wdkGitHub/WelcomeScreenRecentProjectActionGroupExt/releases/download/v1.0.1/WelcomeScreenRecentProjectActionGroupExt-1.0.1.jar"  title="下载" target="_blank">插件安装包</a><p><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/jetbrains/openInTerminal/1.png" alt="效果"></p><h2 id="插件说明"><a href="#插件说明" class="headerlink" title="插件说明"></a>插件说明</h2><div class="note note-info">            <p><span style="padding: 14px;"></span>很简单的一小功能，仅仅是增加一个打开终端的功能而已，可在获取项目路径上走了很多坑，查阅了很多资料。在idea2023.1版本之前，至少2022.4获取Project对象仅仅需要<code>RecentProjectsWelcomeScreenActionBase</code>类或 <code>AnActionEvent</code>类的<code>getData</code>方法加上几个字段（<code>CommonDataKeys, PlatformDataKeys, LangDataKeys类常量</code>）即可获取。在2023版本只能获取到<code>null</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"> <span class="hljs-keyword">public</span> <span class="hljs-meta">@Nullable</span> &lt;T&gt; T <span class="hljs-title function_">getData</span><span class="hljs-params">(<span class="hljs-meta">@NotNull</span> DataKey&lt;T&gt; key)</span> &#123;<br><span class="hljs-keyword">return</span> getDataContext().getData(key);<br> &#125;<br></code></pre></td></tr></table></figure><p><span style="padding: 14px;"></span>查阅了官方文档、Google、百度等信息，均无法解决获取Project对象的存储路径信息。在2023.1版本扩展组<code>WelcomeScreenRecentProjectActionGroup的RecentProjectsWelcomeScreenActionBase等</code>项目的代码均用kotlin重写，也边学边用kotlin进行扩展，最终因技术有限也未能找到获取Project相关信息的方法。</p><p><span style="padding: 14px;"></span>突然想到kotlin和Java是可以互相调用的，于是有了如下的代码。相当的简陋，仅仅满足自己的需求。今后会不会完善并发布到插件平台待定。</p>          </div> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//            // 参考： 复制路径的Class</span><br><span class="hljs-comment">//            Class&lt;?&gt; copyProjectPath = Class.forName (&quot;com.intellij.openapi.wm.impl.welcomeScreen.projectActions.CopyProjectPathAction&quot;);</span><br><span class="hljs-comment">//            Object object = copyProjectPath.getDeclaredConstructor ().newInstance ();</span><br><span class="hljs-comment">//            System.out.println (object.getClass ().getName ());</span><br><span class="hljs-comment">//            //获取 父类</span><br><span class="hljs-comment">//            Class&lt;?&gt; superclass = copyProjectPath.getSuperclass ();</span><br><span class="hljs-comment">//            //获取 父类：内部类</span><br><span class="hljs-comment">//            Class&lt;?&gt;[] declaredClasses = superclass.getDeclaredClasses ();</span><br><span class="hljs-comment">//            for (Class&lt;?&gt; declaredClass : declaredClasses) &#123;</span><br><span class="hljs-comment">//                System.out.println (&quot;父类---内部类：&quot; + declaredClass.getName ());</span><br><span class="hljs-comment">//            &#125;</span><br><br>            <span class="hljs-comment">//获取可以获取 project 的内部类</span><br>            Class&lt;?&gt; RecentProjectsWelcomeScreenActionBase$Companion = Class.forName (<span class="hljs-string">&quot;com.intellij.openapi.wm.impl.welcomeScreen.projectActions.RecentProjectsWelcomeScreenActionBase$Companion&quot;</span>);<br>            <span class="hljs-comment">//构造器</span><br>            Constructor&lt;?&gt; CompanionConstructor = RecentProjectsWelcomeScreenActionBase$Companion.getDeclaredConstructor ();<br>            <span class="hljs-comment">//修改访问权限 private==》public</span><br>            CompanionConstructor.setAccessible (<span class="hljs-literal">true</span>);<br>            <span class="hljs-comment">//new</span><br>            <span class="hljs-type">Object</span> <span class="hljs-variable">companion</span> <span class="hljs-operator">=</span> CompanionConstructor.newInstance ();<br><br><span class="hljs-comment">//            //遍历内部类方法</span><br><span class="hljs-comment">//            Method[] companionMethods = RecentProjectsWelcomeScreenActionBase$Companion.getDeclaredMethods ();</span><br><span class="hljs-comment">//            // 内部类 方法｜类型</span><br><span class="hljs-comment">//            for (Method method : companionMethods) &#123;</span><br><span class="hljs-comment">//                String typeClassName = &quot;&quot;;</span><br><span class="hljs-comment">//                Class&lt;?&gt;[] parameterTypes = method.getParameterTypes ();</span><br><span class="hljs-comment">//                for (Class&lt;?&gt; parameterType : parameterTypes) &#123;</span><br><span class="hljs-comment">//                    typeClassName += parameterType.getName ();</span><br><span class="hljs-comment">//                &#125;</span><br><span class="hljs-comment">//                System.out.println (&quot;获取内部类--- 方法名｜类型：&quot; + method.getName () + &quot;  |  &quot; + (&quot;&quot;.equals (typeClassName) ? &quot;无参&quot; : typeClassName));</span><br><span class="hljs-comment">//            &#125;</span><br><br>            <span class="hljs-comment">//获取可以获取 project 的内部类---  具体方法</span><br>            <span class="hljs-type">Method</span> <span class="hljs-variable">getSelectedItem$intellijPlatformIdeImpl</span> <span class="hljs-operator">=</span> RecentProjectsWelcomeScreenActionBase$Companion.getMethod (<span class="hljs-string">&quot;getSelectedItem$intellij_platform_ide_impl&quot;</span>, AnActionEvent.class);<br><br>            <span class="hljs-comment">// 获取 RecentProjectItem （koltin 对象），继续用反射获取想用的参数</span><br>            <span class="hljs-type">Object</span> <span class="hljs-variable">invoke</span> <span class="hljs-operator">=</span> getSelectedItem$intellijPlatformIdeImpl.invoke (companion, e);<br>            <span class="hljs-comment">// 获取项目本地路径方法</span><br>            <span class="hljs-type">Method</span> <span class="hljs-variable">getProjectPath</span> <span class="hljs-operator">=</span> invoke.getClass ().getMethod (<span class="hljs-string">&quot;getProjectPath&quot;</span>);<br>            <span class="hljs-comment">// 获取路径</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">projectPath</span> <span class="hljs-operator">=</span> String.valueOf (getProjectPath.invoke (invoke));<br><span class="hljs-comment">//            System.out.println (&quot;路径：&quot; + projectPath);</span><br><br>            <span class="hljs-comment">//&lt;editor-fold desc=&quot;执行Mac命令&quot;&gt;</span><br>            <span class="hljs-type">ProcessBuilder</span> <span class="hljs-variable">executeCommand</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProcessBuilder</span> (<span class="hljs-string">&quot;open&quot;</span>, <span class="hljs-string">&quot;-a&quot;</span>, <span class="hljs-string">&quot;/Applications/iTerm.app&quot;</span>, projectPath);<br>            executeCommand.start ();<br>            <span class="hljs-comment">//&lt;/editor-fold&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-keyword">com</span>.intellij.openapi.wm.impl.welcomeScreen.projectActions.CopyProjectPathAction<br>父类---内部类：<span class="hljs-keyword">com</span>.intellij.openapi.wm.impl.welcomeScreen.projectActions.RecentProjectsWelcomeScreenActionBase<span class="hljs-number">$Companion</span><br>获取内部类--- 方法名｜类型：getRECENT_PROJECT_TREE_KEY<span class="hljs-number">$intellij</span>_platform_ide_impl  |  无参<br>获取内部类--- 方法名｜类型：getTree  |  <span class="hljs-keyword">com</span>.intellij.openapi.actionSystem.AnActionEvent<br>获取内部类--- 方法名｜类型：getSelectedItem<span class="hljs-number">$intellij</span>_platform_ide_impl  |  <span class="hljs-keyword">com</span>.intellij.openapi.actionSystem.AnActionEvent<br>获取内部类--- 方法名｜类型：getRECENT_PROJECT_SELECTED_ITEM_KEY<span class="hljs-number">$intellij</span>_platform_ide_impl  |  无参<br>路径：/Users<span class="hljs-comment">/******/</span>Desktop/Temp/未命名文件夹<br></code></pre></td></tr></table></figure><h2 id="插件项目结构"><a href="#插件项目结构" class="headerlink" title="插件项目结构"></a>插件项目结构</h2><blockquote><p>使用idea自带Plugin DevKit 创建项目，默认Gradle 不是Groovy有些可惜。</p><blockquote><p>plugin.xml 、build.gradle 文件比较重要。</p></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs .">├── README.md<br>├── build.gradle.kts<br>├── gradle<br>│   └── wrapper<br>│       ├── gradle-wrapper.jar<br>│       └── gradle-wrapper.properties<br>├── gradle.properties<br>├── gradlew<br>├── gradlew.bat<br>├── settings.gradle.kts<br>└── src<br>    └── main<br>        ├── java<br>        ├── kotlin<br>        └── resources<br>            └── META-INF<br>                ├── plugin.xml     #插件配置文件<br>                └── pluginIcon.svg #插件图标<br></code></pre></td></tr></table></figure><blockquote><p>增加扩展点</p></blockquote><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/jetbrains/openInTerminal/2.png" alt="新增扩展点"></div><div class="group-image-wrap"><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/jetbrains/openInTerminal/3.png" alt="添加锚点"></div></div></div>]]></content>
    
    
    <summary type="html">idea欢迎页面右击项目扩展点获取Project对象。&lt;br&gt; 自用插件，简陋版本。仅仅测试过Mac OS、iTrem2、Idea2023.1  </summary>
    
    
    
    <category term="Jetbrains" scheme="https://blog.dekun.wang/categories/Jetbrains/"/>
    
    
    <category term="Jetbrains" scheme="https://blog.dekun.wang/tags/Jetbrains/"/>
    
    <category term="Plugins" scheme="https://blog.dekun.wang/tags/Plugins/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA 插件---打开本机Typora</title>
    <link href="https://blog.dekun.wang/blog/78bb0db.html"/>
    <id>https://blog.dekun.wang/blog/78bb0db.html</id>
    <published>2023-04-23T12:44:58.000Z</published>
    <updated>2023-06-01T14:41:29.157Z</updated>
    
    <content type="html"><![CDATA[<h1 id="idea-native-markdown-plugin"><a href="#idea-native-markdown-plugin" class="headerlink" title="idea-native-markdown-plugin"></a>idea-native-markdown-plugin</h1><p><a href="https://plugins.jetbrains.com/docs/intellij/extension-point-list.html"> Extension Points 文档</a></p><div class="note note-primary">            <p>需求：需要在项目窗口中快捷使用外部 Markdown 软件打开文件。</p><p>效果图如下：</p>          </div><blockquote><p><a href="https://github.com/wdkGitHub/idea-native-markdown-plugin">GitHub地址</a></p><blockquote><p><a href="https://github.com/wdkGitHub/idea-native-markdown-plugin/releases/download/v0.0.1-Alpha/idea-open-typora-plugin-0.0.1-Alpha.jar">v0.0.1-Alpha</a><br>  适配 2022.4 ～ 2023.*  目前仅支持Mac系统。  </p></blockquote></blockquote><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/jetbrains/idea-native-markdown-plugin/1.png" alt="1" style="zoom: 50%;" />]]></content>
    
    
    <summary type="html">Jetbrains 插件， 快捷使用外部Markdown软件打开工程目录下文件。</summary>
    
    
    
    <category term="Jetbrains" scheme="https://blog.dekun.wang/categories/Jetbrains/"/>
    
    
    <category term="Jetbrains" scheme="https://blog.dekun.wang/tags/Jetbrains/"/>
    
    <category term="Plugins" scheme="https://blog.dekun.wang/tags/Plugins/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Typora+PicGo+云存储写作环境搭建</title>
    <link href="https://blog.dekun.wang/blog/c34ef771.html"/>
    <id>https://blog.dekun.wang/blog/c34ef771.html</id>
    <published>2023-04-21T15:14:35.000Z</published>
    <updated>2023-06-01T14:41:29.214Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写作环境配置"><a href="#写作环境配置" class="headerlink" title="写作环境配置"></a>写作环境配置</h1><h2 id="必须软件"><a href="#必须软件" class="headerlink" title="必须软件"></a>必须软件</h2><blockquote><ul><li>Typora</li><li>PicGo</li></ul></blockquote><h2 id="Typora-配置"><a href="#Typora-配置" class="headerlink" title="Typora 配置"></a>Typora 配置</h2><h3 id="markdown-Front-matter-配置"><a href="#markdown-Front-matter-配置" class="headerlink" title="markdown Front-matter 配置"></a>markdown Front-matter 配置</h3><div class="note note-warning">            <blockquote><p>增加如下配置</p></blockquote><p>​注意相对路径配置， <code>.</code>代表此时是在 <code>_post</code>文件夹下。 </p>          </div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 配置当前markdown文件 Typora此时的根目录（粘贴图片）</span><br><span class="hljs-attr">typora-root-url:</span> <span class="hljs-string">../</span><br><span class="hljs-comment"># 图片文件存放位置</span><br><span class="hljs-attr">typora-copy-images-to:</span> <span class="hljs-string">../mk-images/post</span><br></code></pre></td></tr></table></figure><h3 id="Typora上传配置"><a href="#Typora上传配置" class="headerlink" title="Typora上传配置"></a>Typora上传配置</h3><blockquote><p><a href="https://support.typora.io/Images/#preferred-image-syntax">官方文档</a></p></blockquote><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/blog/write_env/1.png" alt="Typora配置" style="zoom: 33%;" /><h2 id="PicGo-配置"><a href="#PicGo-配置" class="headerlink" title="PicGo 配置"></a>PicGo 配置</h2><h3 id="存储云设置"><a href="#存储云设置" class="headerlink" title="存储云设置"></a>存储云设置</h3><blockquote><ul><li>链接格式选择URL</li><li>填写 腾讯COS配置信息</li></ul></blockquote><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/blog/write_env/2.png" alt="腾讯云COS" style="zoom:50%;" /><h3 id="dir-prefix-插件配置"><a href="#dir-prefix-插件配置" class="headerlink" title="dir-prefix 插件配置"></a>dir-prefix 插件配置</h3><blockquote><p>安装插件PicGo的插件 ：dir-prefix</p><p>配置插件参数，细节查看<a href="https://github.com/karboom/picgo-plugin-dir-prefix">插件文档</a></p><blockquote><p>例如： </p><ul><li>本地路径  ：<code>/a/b/c/d/e.md</code></li><li>COS 上传路径配置为：  blog&#x2F;</li><li>dir-prefix插件配置：<code>/a/b/c/</code></li><li>最终上传到COS： <ul><li>存储路径：blog&#x2F;d&#x2F;image.png</li><li>URL :   分配的域名&#x2F;blog&#x2F;d&#x2F;image.png</li></ul></li></ul></blockquote></blockquote><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/blog/write_env/3.png" alt="PicGo搜索插件dir-prefix"></div><div class="group-image-wrap"><img src="https://blog-cos-1314018943.cos.ap-beijing.myqcloud.com/mk-images/blog/write_env/4.png" alt="dir-prefix-plugin配置"></div></div></div>]]></content>
    
    
    <summary type="html">Hexo+Typora+PicGo+云存储，本地环境配置（MacOS）。</summary>
    
    
    
    <category term="Blog" scheme="https://blog.dekun.wang/categories/Blog/"/>
    
    
    <category term="Hexo" scheme="https://blog.dekun.wang/tags/Hexo/"/>
    
    <category term="Typora" scheme="https://blog.dekun.wang/tags/Typora/"/>
    
    <category term="PicGo" scheme="https://blog.dekun.wang/tags/PicGo/"/>
    
    <category term="腾讯COS" scheme="https://blog.dekun.wang/tags/%E8%85%BE%E8%AE%AFCOS/"/>
    
  </entry>
  
  <entry>
    <title>莫愁千里路    自有东风来</title>
    <link href="https://blog.dekun.wang/blog/e010241.html"/>
    <id>https://blog.dekun.wang/blog/e010241.html</id>
    <published>2022-12-31T16:00:00.000Z</published>
    <updated>2023-06-01T14:41:29.199Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="c524eea2e513f6fc8912ee9bab0b070429ca419cea75338b33201abcec9bf714">7e44ee3df96620f4b1f66a5329203c24331765dde4ffea944d5a6299f61ac0e16a89648368b07e86177c7a47e6f1b9825899bceeff5e119288829c2a311c086cc5b0d77fe66e9cbb58c38fd0d53e76d78abcd517917350dbad708e1430f291796ea6f1ef76d42b7c65a1c8b561b4ca181ebcdc882e40cfa6338f8fd37220bc0947975845417a29a0e46930ebe4f15343b2a6ea3614a479a5da68ec3095815f94e57b724988a5d0affd33b3f6bdbe8e2098708055555d3cbfeae0c6fb9de757c10df96a6ecf37e455b26c3b493977e0c218de41682504f653722220b87248941bfbdd91ea04daead802b6fadd14d46292c61f474e1911f63d0cee5ee1f5752031982a2263e7396c454d1d1fb3122526f879e1d702891b0572c388a8875b592ab8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">你是谁？我又是谁？.......</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">加密文章,不妨猜猜密码。 🤠</summary>
    
    
    
    <category term="Cipher" scheme="https://blog.dekun.wang/categories/Cipher/"/>
    
    
    <category term="Cipher" scheme="https://blog.dekun.wang/tags/Cipher/"/>
    
  </entry>
  
  <entry>
    <title>Nginx configure Commond</title>
    <link href="https://blog.dekun.wang/blog/a321d8ce.html"/>
    <id>https://blog.dekun.wang/blog/a321d8ce.html</id>
    <published>2022-11-15T13:06:00.000Z</published>
    <updated>2023-06-01T14:41:29.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nginx-configure"><a href="#Nginx-configure" class="headerlink" title="Nginx configure"></a>Nginx configure</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br>--help                             <span class="hljs-built_in">print</span> this message<br><br><span class="hljs-attribute">--prefix</span>=PATH                      <span class="hljs-built_in">set</span> installation<span class="hljs-built_in"> prefix</span><br><span class="hljs-built_in"></span><span class="hljs-attribute">--sbin-path</span>=PATH                   <span class="hljs-built_in">set</span> nginx binary pathname<br><span class="hljs-attribute">--modules-path</span>=PATH                <span class="hljs-built_in">set</span> modules path<br><span class="hljs-attribute">--conf-path</span>=PATH                   <span class="hljs-built_in">set</span> nginx.conf pathname<br><span class="hljs-attribute">--error-log-path</span>=PATH              <span class="hljs-built_in">set</span> <span class="hljs-built_in">error</span> log pathname<br><span class="hljs-attribute">--pid-path</span>=PATH                    <span class="hljs-built_in">set</span> nginx.pid pathname<br><span class="hljs-attribute">--lock-path</span>=PATH                   <span class="hljs-built_in">set</span> nginx.lock pathname<br><br><span class="hljs-attribute">--user</span>=USER                        <span class="hljs-built_in">set</span> non-privileged<span class="hljs-built_in"> user </span><span class="hljs-keyword">for</span><br>                                   worker processes<br><span class="hljs-attribute">--group</span>=GROUP                      <span class="hljs-built_in">set</span> non-privileged<span class="hljs-built_in"> group </span><span class="hljs-keyword">for</span><br>                                   worker processes<br><br><span class="hljs-attribute">--build</span>=NAME                       <span class="hljs-built_in">set</span> build name<br><span class="hljs-attribute">--builddir</span>=DIR                     <span class="hljs-built_in">set</span> build directory<br><br>--with-select_module               <span class="hljs-built_in">enable</span> select module<br>--without-select_module            <span class="hljs-built_in">disable</span> select module<br>--with-poll_module                 <span class="hljs-built_in">enable</span> poll module<br>--without-poll_module              <span class="hljs-built_in">disable</span> poll module<br><br>--with-threads                     <span class="hljs-built_in">enable</span> thread<span class="hljs-built_in"> pool </span>support<br><br>--with-file-aio                    <span class="hljs-built_in">enable</span> file AIO support<br><br>--with-http_ssl_module             <span class="hljs-built_in">enable</span> ngx_http_ssl_module<br>--with-http_v2_module              <span class="hljs-built_in">enable</span> ngx_http_v2_module<br>--with-http_realip_module          <span class="hljs-built_in">enable</span> ngx_http_realip_module<br>--with-http_addition_module        <span class="hljs-built_in">enable</span> ngx_http_addition_module<br>--with-http_xslt_module            <span class="hljs-built_in">enable</span> ngx_http_xslt_module<br><span class="hljs-attribute">--with-http_xslt_module</span>=dynamic    <span class="hljs-built_in">enable</span> dynamic ngx_http_xslt_module<br>--with-http_image_filter_module    <span class="hljs-built_in">enable</span> ngx_http_image_filter_module<br><span class="hljs-attribute">--with-http_image_filter_module</span>=dynamic<br>                                   <span class="hljs-built_in">enable</span> dynamic ngx_http_image_filter_module<br>--with-http_geoip_module           <span class="hljs-built_in">enable</span> ngx_http_geoip_module<br><span class="hljs-attribute">--with-http_geoip_module</span>=dynamic   <span class="hljs-built_in">enable</span> dynamic ngx_http_geoip_module<br>--with-http_sub_module             <span class="hljs-built_in">enable</span> ngx_http_sub_module<br>--with-http_dav_module             <span class="hljs-built_in">enable</span> ngx_http_dav_module<br>--with-http_flv_module             <span class="hljs-built_in">enable</span> ngx_http_flv_module<br>--with-http_mp4_module             <span class="hljs-built_in">enable</span> ngx_http_mp4_module<br>--with-http_gunzip_module          <span class="hljs-built_in">enable</span> ngx_http_gunzip_module<br>--with-http_gzip_static_module     <span class="hljs-built_in">enable</span> ngx_http_gzip_static_module<br>--with-http_auth_request_module    <span class="hljs-built_in">enable</span> ngx_http_auth_request_module<br>--with-http_random_index_module    <span class="hljs-built_in">enable</span> ngx_http_random_index_module<br>--with-http_secure_link_module     <span class="hljs-built_in">enable</span> ngx_http_secure_link_module<br>--with-http_degradation_module     <span class="hljs-built_in">enable</span> ngx_http_degradation_module<br>--with-http_slice_module           <span class="hljs-built_in">enable</span> ngx_http_slice_module<br>--with-http_stub_status_module     <span class="hljs-built_in">enable</span> ngx_http_stub_status_module<br><br>--without-http_charset_module      <span class="hljs-built_in">disable</span> ngx_http_charset_module<br>--without-http_gzip_module         <span class="hljs-built_in">disable</span> ngx_http_gzip_module<br>--without-http_ssi_module          <span class="hljs-built_in">disable</span> ngx_http_ssi_module<br>--without-http_userid_module       <span class="hljs-built_in">disable</span> ngx_http_userid_module<br>--without-http_access_module       <span class="hljs-built_in">disable</span> ngx_http_access_module<br>--without-http_auth_basic_module   <span class="hljs-built_in">disable</span> ngx_http_auth_basic_module<br>--without-http_mirror_module       <span class="hljs-built_in">disable</span> ngx_http_mirror_module<br>--without-http_autoindex_module    <span class="hljs-built_in">disable</span> ngx_http_autoindex_module<br>--without-http_geo_module          <span class="hljs-built_in">disable</span> ngx_http_geo_module<br>--without-http_map_module          <span class="hljs-built_in">disable</span> ngx_http_map_module<br>--without-http_split_clients_module <span class="hljs-built_in">disable</span> ngx_http_split_clients_module<br>--without-http_referer_module      <span class="hljs-built_in">disable</span> ngx_http_referer_module<br>--without-http_rewrite_module      <span class="hljs-built_in">disable</span> ngx_http_rewrite_module<br>--without-http_proxy_module        <span class="hljs-built_in">disable</span> ngx_http_proxy_module<br>--without-http_fastcgi_module      <span class="hljs-built_in">disable</span> ngx_http_fastcgi_module<br>--without-http_uwsgi_module        <span class="hljs-built_in">disable</span> ngx_http_uwsgi_module<br>--without-http_scgi_module         <span class="hljs-built_in">disable</span> ngx_http_scgi_module<br>--without-http_grpc_module         <span class="hljs-built_in">disable</span> ngx_http_grpc_module<br>--without-http_memcached_module    <span class="hljs-built_in">disable</span> ngx_http_memcached_module<br>--without-http_limit_conn_module   <span class="hljs-built_in">disable</span> ngx_http_limit_conn_module<br>--without-http_limit_req_module    <span class="hljs-built_in">disable</span> ngx_http_limit_req_module<br>--without-http_empty_gif_module    <span class="hljs-built_in">disable</span> ngx_http_empty_gif_module<br>--without-http_browser_module      <span class="hljs-built_in">disable</span> ngx_http_browser_module<br>--without-http_upstream_hash_module<br>                                   <span class="hljs-built_in">disable</span> ngx_http_upstream_hash_module<br>--without-http_upstream_ip_hash_module<br>                                   <span class="hljs-built_in">disable</span> ngx_http_upstream_ip_hash_module<br>--without-http_upstream_least_conn_module<br>                                   <span class="hljs-built_in">disable</span> ngx_http_upstream_least_conn_module<br>--without-http_upstream_random_module<br>                                   <span class="hljs-built_in">disable</span> ngx_http_upstream_random_module<br>--without-http_upstream_keepalive_module<br>                                   <span class="hljs-built_in">disable</span> ngx_http_upstream_keepalive_module<br>--without-http_upstream_zone_module<br>                                   <span class="hljs-built_in">disable</span> ngx_http_upstream_zone_module<br><br>--with-http_perl_module            <span class="hljs-built_in">enable</span> ngx_http_perl_module<br><span class="hljs-attribute">--with-http_perl_module</span>=dynamic    <span class="hljs-built_in">enable</span> dynamic ngx_http_perl_module<br><span class="hljs-attribute">--with-perl_modules_path</span>=PATH      <span class="hljs-built_in">set</span> Perl modules path<br><span class="hljs-attribute">--with-perl</span>=PATH                   <span class="hljs-built_in">set</span> perl binary pathname<br><br><span class="hljs-attribute">--http-log-path</span>=PATH               <span class="hljs-built_in">set</span> http access log pathname<br><span class="hljs-attribute">--http-client-body-temp-path</span>=PATH  <span class="hljs-built_in">set</span> path <span class="hljs-keyword">to</span> store<br>                                   http<span class="hljs-built_in"> client </span>request body temporary files<br><span class="hljs-attribute">--http-proxy-temp-path</span>=PATH        <span class="hljs-built_in">set</span> path <span class="hljs-keyword">to</span> store<br>                                   http<span class="hljs-built_in"> proxy </span>temporary files<br><span class="hljs-attribute">--http-fastcgi-temp-path</span>=PATH      <span class="hljs-built_in">set</span> path <span class="hljs-keyword">to</span> store<br>                                   http fastcgi temporary files<br><span class="hljs-attribute">--http-uwsgi-temp-path</span>=PATH        <span class="hljs-built_in">set</span> path <span class="hljs-keyword">to</span> store<br>                                   http uwsgi temporary files<br><span class="hljs-attribute">--http-scgi-temp-path</span>=PATH         <span class="hljs-built_in">set</span> path <span class="hljs-keyword">to</span> store<br>                                   http scgi temporary files<br><br>--without-http                     <span class="hljs-built_in">disable</span> HTTP<span class="hljs-built_in"> server</span><br><span class="hljs-built_in"></span>--without-http-cache               <span class="hljs-built_in">disable</span> HTTP cache<br><br>--with-mail                        <span class="hljs-built_in">enable</span> POP3/IMAP4/SMTP<span class="hljs-built_in"> proxy </span>module<br><span class="hljs-attribute">--with-mail</span>=dynamic                <span class="hljs-built_in">enable</span> dynamic POP3/IMAP4/SMTP<span class="hljs-built_in"> proxy </span>module<br>--with-mail_ssl_module             <span class="hljs-built_in">enable</span> ngx_mail_ssl_module<br>--without-mail_pop3_module         <span class="hljs-built_in">disable</span> ngx_mail_pop3_module<br>--without-mail_imap_module         <span class="hljs-built_in">disable</span> ngx_mail_imap_module<br>--without-mail_smtp_module         <span class="hljs-built_in">disable</span> ngx_mail_smtp_module<br><br>--with-stream                      <span class="hljs-built_in">enable</span> TCP/UDP<span class="hljs-built_in"> proxy </span>module<br><span class="hljs-attribute">--with-stream</span>=dynamic              <span class="hljs-built_in">enable</span> dynamic TCP/UDP<span class="hljs-built_in"> proxy </span>module<br>--with-stream_ssl_module           <span class="hljs-built_in">enable</span> ngx_stream_ssl_module<br>--with-stream_realip_module        <span class="hljs-built_in">enable</span> ngx_stream_realip_module<br>--with-stream_geoip_module         <span class="hljs-built_in">enable</span> ngx_stream_geoip_module<br><span class="hljs-attribute">--with-stream_geoip_module</span>=dynamic <span class="hljs-built_in">enable</span> dynamic ngx_stream_geoip_module<br>--with-stream_ssl_preread_module   <span class="hljs-built_in">enable</span> ngx_stream_ssl_preread_module<br>--without-stream_limit_conn_module <span class="hljs-built_in">disable</span> ngx_stream_limit_conn_module<br>--without-stream_access_module     <span class="hljs-built_in">disable</span> ngx_stream_access_module<br>--without-stream_geo_module        <span class="hljs-built_in">disable</span> ngx_stream_geo_module<br>--without-stream_map_module        <span class="hljs-built_in">disable</span> ngx_stream_map_module<br>--without-stream_split_clients_module<br>                                   <span class="hljs-built_in">disable</span> ngx_stream_split_clients_module<br>--without-stream_return_module     <span class="hljs-built_in">disable</span> ngx_stream_return_module<br>--without-stream_set_module        <span class="hljs-built_in">disable</span> ngx_stream_set_module<br>--without-stream_upstream_hash_module<br>                                   <span class="hljs-built_in">disable</span> ngx_stream_upstream_hash_module<br>--without-stream_upstream_least_conn_module<br>                                   <span class="hljs-built_in">disable</span> ngx_stream_upstream_least_conn_module<br>--without-stream_upstream_random_module<br>                                   <span class="hljs-built_in">disable</span> ngx_stream_upstream_random_module<br>--without-stream_upstream_zone_module<br>                                   <span class="hljs-built_in">disable</span> ngx_stream_upstream_zone_module<br><br>--with-google_perftools_module     <span class="hljs-built_in">enable</span> ngx_google_perftools_module<br>--with-cpp_test_module             <span class="hljs-built_in">enable</span> ngx_cpp_test_module<br><br><span class="hljs-attribute">--add-module</span>=PATH                  <span class="hljs-built_in">enable</span> external module<br><span class="hljs-attribute">--add-dynamic-module</span>=PATH          <span class="hljs-built_in">enable</span> dynamic external module<br><br>--with-compat                      dynamic modules compatibility<br><br><span class="hljs-attribute">--with-cc</span>=PATH                     <span class="hljs-built_in">set</span> C compiler pathname<br><span class="hljs-attribute">--with-cpp</span>=PATH                    <span class="hljs-built_in">set</span> C preprocessor pathname<br><span class="hljs-attribute">--with-cc-opt</span>=OPTIONS              <span class="hljs-built_in">set</span> additional C compiler options<br><span class="hljs-attribute">--with-ld-opt</span>=OPTIONS              <span class="hljs-built_in">set</span> additional linker options<br><span class="hljs-attribute">--with-cpu-opt</span>=CPU                 build <span class="hljs-keyword">for</span> the specified CPU, valid values:<br>                                   pentium, pentiumpro, pentium3, pentium4,<br>                                   athlon, opteron, sparc32, sparc64, ppc64<br><br>--without-pcre                     <span class="hljs-built_in">disable</span> PCRE library usage<br>--with-pcre                        force PCRE library usage<br><span class="hljs-attribute">--with-pcre</span>=DIR                    <span class="hljs-built_in">set</span> path <span class="hljs-keyword">to</span> PCRE library sources<br><span class="hljs-attribute">--with-pcre-opt</span>=OPTIONS            <span class="hljs-built_in">set</span> additional build options <span class="hljs-keyword">for</span> PCRE<br>--with-pcre-jit                    build PCRE with JIT compilation support<br>--without-pcre2                    <span class="hljs-keyword">do</span> <span class="hljs-keyword">not</span> use PCRE2 library<br><br><span class="hljs-attribute">--with-zlib</span>=DIR                    <span class="hljs-built_in">set</span> path <span class="hljs-keyword">to</span> zlib library sources<br><span class="hljs-attribute">--with-zlib-opt</span>=OPTIONS            <span class="hljs-built_in">set</span> additional build options <span class="hljs-keyword">for</span> zlib<br><span class="hljs-attribute">--with-zlib-asm</span>=CPU                use zlib assembler sources optimized<br>                                   <span class="hljs-keyword">for</span> the specified CPU, valid values:<br>                                   pentium, pentiumpro<br><br>--with-libatomic                   force libatomic_ops library usage<br><span class="hljs-attribute">--with-libatomic</span>=DIR               <span class="hljs-built_in">set</span> path <span class="hljs-keyword">to</span> libatomic_ops library sources<br><br><span class="hljs-attribute">--with-openssl</span>=DIR                 <span class="hljs-built_in">set</span> path <span class="hljs-keyword">to</span> OpenSSL library sources<br><span class="hljs-attribute">--with-openssl-opt</span>=OPTIONS         <span class="hljs-built_in">set</span> additional build options <span class="hljs-keyword">for</span> OpenSSL<br><br>--with-<span class="hljs-built_in">debug</span>                       <span class="hljs-built_in">enable</span> <span class="hljs-built_in">debug</span><span class="hljs-built_in"> logging</span><br><span class="hljs-built_in"></span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">configure 命令信息</summary>
    
    
    
    <category term="Doc" scheme="https://blog.dekun.wang/categories/Doc/"/>
    
    <category term="Nginx" scheme="https://blog.dekun.wang/categories/Doc/Nginx/"/>
    
    <category term="Nginx" scheme="https://blog.dekun.wang/categories/Nginx/"/>
    
    
    <category term="Nginx" scheme="https://blog.dekun.wang/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Failure to find net.sf.json-lib:json-lib:jar:JDK15:</title>
    <link href="https://blog.dekun.wang/blog/624fa423.html"/>
    <id>https://blog.dekun.wang/blog/624fa423.html</id>
    <published>2020-12-21T04:16:47.000Z</published>
    <updated>2023-06-01T14:41:29.162Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Failure-to-find-net-sf-json-lib-json-lib-jar-JDK15"><a href="#Failure-to-find-net-sf-json-lib-json-lib-jar-JDK15" class="headerlink" title="Failure to find net.sf.json-lib:json-lib:jar:JDK15"></a>Failure to find net.sf.json-lib:json-lib:jar:JDK15</h1><h2 id="Mac-系统报错："><a href="#Mac-系统报错：" class="headerlink" title="Mac 系统报错："></a>Mac 系统报错：</h2><div class="note note-danger">            <p>Failure to find net.sf.json-lib:json-lib:jar:JDK15:</p>          </div><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stata">[<span class="hljs-keyword">ERROR</span>] Failed to execute goal <span class="hljs-keyword">on</span> project BI: Could not resolve dependencies <span class="hljs-keyword">for</span> project ******* : Failure to find <span class="hljs-keyword">net</span>.sf.json-lib:json-lib:jar:JDK15:2.4 <span class="hljs-keyword">in</span> https:<span class="hljs-comment">//repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -&gt; [Help 1]</span><br>[<span class="hljs-keyword">ERROR</span>] <br>[<span class="hljs-keyword">ERROR</span>] To see the full <span class="hljs-keyword">stack</span> trace of the errors, re-<span class="hljs-keyword">run</span> Maven with the -<span class="hljs-keyword">e</span> switch.<br>[<span class="hljs-keyword">ERROR</span>] Re-<span class="hljs-keyword">run</span> Maven using the -X switch to enable full debug logging.<br>[<span class="hljs-keyword">ERROR</span>] <br>[<span class="hljs-keyword">ERROR</span>] <span class="hljs-keyword">For</span> <span class="hljs-keyword">more</span> information <span class="hljs-keyword">about</span> the errors and possible solutions, please <span class="hljs-keyword">read</span> the following articles:<br>[<span class="hljs-keyword">ERROR</span>] [<span class="hljs-keyword">Help</span> 1] http:<span class="hljs-comment">//cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException</span><br></code></pre></td></tr></table></figure><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><div class="note note-success">            <p>修改Pom文件，<code> &lt;classifier&gt;JDK15&lt;/classifier&gt;</code> 为值修改为小写<code> &lt;classifier&gt;jdk15&lt;/classifier&gt;</code><br>则可以正常下载jar包，大小写自测只影响第一次下载，自行决定是否保留修改。</p>          </div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>net.sf.json-lib<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>json-lib<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">classifier</span>&gt;</span>JDK15<span class="hljs-tag">&lt;/<span class="hljs-name">classifier</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Failure to find net.sf.json-lib:json-lib:jar:JDK15</summary>
    
    
    
    <category term="Maven" scheme="https://blog.dekun.wang/categories/Maven/"/>
    
    <category term="Bug" scheme="https://blog.dekun.wang/categories/Bug/"/>
    
    <category term="Maven" scheme="https://blog.dekun.wang/categories/Bug/Maven/"/>
    
    
    <category term="Maven" scheme="https://blog.dekun.wang/tags/Maven/"/>
    
    <category term="net.sf.json-lib" scheme="https://blog.dekun.wang/tags/net-sf-json-lib/"/>
    
    <category term="Bug" scheme="https://blog.dekun.wang/tags/Bug/"/>
    
  </entry>
  
  <entry>
    <title>svn迁移git</title>
    <link href="https://blog.dekun.wang/blog/fc1b26ef.html"/>
    <id>https://blog.dekun.wang/blog/fc1b26ef.html</id>
    <published>2020-07-31T08:18:05.000Z</published>
    <updated>2023-06-01T14:41:29.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git仓库迁移"><a href="#git仓库迁移" class="headerlink" title="git仓库迁移"></a>git仓库迁移</h1><blockquote><p>将svn转移到git并保留提交记录</p></blockquote><ol><li>确定svn所有用户</li></ol> <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">svn <span class="hljs-built_in">log</span> --xml | <span class="hljs-keyword">grep</span> author | <span class="hljs-keyword">sort</span> -<span class="hljs-keyword">u</span> | <span class="hljs-keyword">perl</span> -<span class="hljs-keyword">pe</span> <span class="hljs-string">&#x27;s/.*&gt;(.*?)&lt;.*/$1 = /&#x27;</span> &gt;user.txt<br></code></pre></td></tr></table></figure><blockquote><p>示例：svn&#x3D;git&lt;email&gt;<br>name &#x3D; name&lt;<a href="mailto:&#49;&#x32;&#x33;&#52;&#53;&#x36;&#x40;&#x31;&#54;&#51;&#x2e;&#99;&#111;&#x6d;">&#49;&#x32;&#x33;&#52;&#53;&#x36;&#x40;&#x31;&#54;&#51;&#x2e;&#99;&#111;&#x6d;</a>&gt;</p></blockquote><ol start="2"><li>拉取svn代码，并转换成git版本控制</li></ol> <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git svn clone  <span class="hljs-attr">--no-metadata</span> <span class="hljs-attr">--no-minimize-url</span> <span class="hljs-attr">--authors-file</span>=users<span class="hljs-selector-class">.txt</span>  <span class="hljs-selector-attr">[svn url]</span>  <span class="hljs-selector-attr">[local file name]</span><br>#示例:<br>git svn clone  <span class="hljs-attr">--no-metadata</span> <span class="hljs-attr">--no-minimize-url</span> <span class="hljs-attr">--authors-file</span>=users<span class="hljs-selector-class">.txt</span>  https:<span class="hljs-comment">//127.0.0.01/svn/repo/code  iotcode</span><br></code></pre></td></tr></table></figure><ol start="3"><li><p>清理svn信息参考官方文档 <a href="https://git-scm.com/book/zh/v2/Git-%E4%B8%8E%E5%85%B6%E4%BB%96%E7%B3%BB%E7%BB%9F-%E8%BF%81%E7%A7%BB%E5%88%B0-Git">git教程</a> 。<em>注：也许不需要清理</em></p></li><li><p>本地仓库添加添加远程仓库</p></li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment"># 添加</span><br>git remote <span class="hljs-keyword">add </span>[<span class="hljs-keyword">origin </span>name] [url]<br><span class="hljs-comment"># 查看</span><br>git remote -v<br></code></pre></td></tr></table></figure><ol start="5"><li><p>拉取远程仓库，因为本地仓库与远程仓库无交集，需要使用<code>git pull origin master --allow-unrelated-histories</code> 拉取代码。<a href="https://blog.csdn.net/lindexi_gd/article/details/52554159">参考</a></p></li><li><p>推送到远程服务器<code>git push origin --all</code></p></li></ol><blockquote><p><a href="https://github.wangkaimin.com/2018/09/05/git-svn-mac-error.html">Mac系统，第二步异常参考</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;git仓库迁移&quot;&gt;&lt;a href=&quot;#git仓库迁移&quot; class=&quot;headerlink&quot; title=&quot;git仓库迁移&quot;&gt;&lt;/a&gt;git仓库迁移&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;将svn转移到git并保留提交记录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;</summary>
      
    
    
    
    <category term="Git" scheme="https://blog.dekun.wang/categories/Git/"/>
    
    
    <category term="Git" scheme="https://blog.dekun.wang/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Oracle不可见字符</title>
    <link href="https://blog.dekun.wang/blog/8e3d9981.html"/>
    <id>https://blog.dekun.wang/blog/8e3d9981.html</id>
    <published>2020-04-19T09:23:54.000Z</published>
    <updated>2023-06-01T14:41:29.175Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oracle-不可见字符处理"><a href="#Oracle-不可见字符处理" class="headerlink" title="Oracle 不可见字符处理"></a>Oracle 不可见字符处理</h1><h2 id="1-处理过程"><a href="#1-处理过程" class="headerlink" title="1. 处理过程"></a>1. 处理过程</h2><ol><li>表结构</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> telphone_temp_20190821(<br>    telnum varchar2(<span class="hljs-number">32</span>)<br>);<br></code></pre></td></tr></table></figure><ol start="2"><li>查询数据，确定ASCII值</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> ROWNUM<span class="hljs-operator">||</span><span class="hljs-string">&#x27;#&#x27;</span><span class="hljs-operator">||</span><span class="hljs-built_in">trim</span>(telnum)<span class="hljs-operator">||</span><span class="hljs-string">&#x27;#&#x27;</span><span class="hljs-operator">||</span>lengthb(telnum)<span class="hljs-operator">||</span><span class="hljs-string">&#x27;#&#x27;</span><span class="hljs-operator">||</span> dump(telnum) <span class="hljs-keyword">from</span> telphone_temp_20190821 <span class="hljs-keyword">where</span>  ROWNUM <span class="hljs-operator">&lt;</span><span class="hljs-number">3</span>;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs SQL">ROWNUM<span class="hljs-operator">||</span><span class="hljs-string">&#x27;#&#x27;</span><span class="hljs-operator">||</span><span class="hljs-built_in">TRIM</span>(TELNUM)<span class="hljs-operator">||</span><span class="hljs-string">&#x27;#&#x27;</span><span class="hljs-operator">||</span>LENGTHB(TELNUM)<span class="hljs-operator">||</span><span class="hljs-string">&#x27;#&#x27;</span><span class="hljs-operator">||</span>DUMP(TELNUM)<br><span class="hljs-comment">-----------------------------------------------------------------</span><br><span class="hljs-number">1</span>#              <span class="hljs-number">146</span>           #<span class="hljs-number">17</span>#Typ<span class="hljs-operator">=</span><span class="hljs-number">1</span> Len<span class="hljs-operator">=</span><span class="hljs-number">17</span>: <span class="hljs-number">9</span>,<span class="hljs-number">9</span>,<span class="hljs-number">49</span>,<span class="hljs-number">52</span>,<span class="hljs-number">54</span>,<span class="hljs-number">9</span>,<span class="hljs-number">9</span><br><span class="hljs-number">2</span>#              <span class="hljs-number">144</span>           #<span class="hljs-number">15</span>#Typ<span class="hljs-operator">=</span><span class="hljs-number">1</span> Len<span class="hljs-operator">=</span><span class="hljs-number">15</span>: <span class="hljs-number">9</span>,<span class="hljs-number">9</span>,<span class="hljs-number">49</span>,<span class="hljs-number">52</span>,<span class="hljs-number">52</span>,<span class="hljs-number">9</span>,<span class="hljs-number">9</span><br></code></pre></td></tr></table></figure><blockquote><p>不可见字符 ASCII 值等于9</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> chr(<span class="hljs-number">9</span>) <span class="hljs-keyword">from</span> dual;<br></code></pre></td></tr></table></figure><ol start="3"><li>replace剔除不可见字符，利用<code>chr()</code>函数将数值转换成<em><strong>不可见</strong></em>字符</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">select</span> replace(telnum, chr(<span class="hljs-number">9</span>), <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">from</span> telphone_temp_20190821 <span class="hljs-keyword">where</span> ROWNUM <span class="hljs-operator">&lt;</span><span class="hljs-number">3</span>;<br></code></pre></td></tr></table></figure><h2 id="2-Oracle-函数"><a href="#2-Oracle-函数" class="headerlink" title="2.Oracle 函数"></a>2.Oracle 函数</h2><ol><li><code>dump(expression [, return_format] [, start_position] [, length] )</code></li></ol><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs tap">expression：要分析的表达式。<br>return_format：决定了返回值的格式，该参数可以是以下任何值：<br>     ●<span class="hljs-number"> 8 </span>：八进制符号<br>     ●<span class="hljs-number"> 10 </span>：十进制符号<br>     ●<span class="hljs-number"> 16 </span>：十六进制符号<br>     ●<span class="hljs-number"> 17 </span>：单个字符<br>     ●<span class="hljs-number"> 1008 </span>：带字符集名称的八进制符号<br>     ●<span class="hljs-number"> 1010 </span>：带字符集名称的十进制符号<br>     ●<span class="hljs-number"> 1016 </span>：带字符集名称的十六进制符号<br>     ●<span class="hljs-number"> 1017 </span>：带字符集名称的单个字符<br>start_position ：可选的，要返回的内部表示的起始位置。<br>length ：可选的，要返回的内部表示的长度。        <br> 返回值: Typ=1 Len=17: [CharacterSet=ZHS16GBK] 9,9,49,52,54,9,9<br>           ● Type : 字段类型（见表格）<br>           ● Len ：长度<br>           ● 每个字符的 Ascii值<br></code></pre></td></tr></table></figure><ol start="2"><li><code>lengthb()</code>：返回的是 字节数</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">select</span> length(<span class="hljs-string">&#x27;Oracle&#x27;</span>) <span class="hljs-keyword">from</span> dual<br>结果：<span class="hljs-number">6</span><br><span class="hljs-keyword">select</span> lengthb(<span class="hljs-string">&#x27;Oracle&#x27;</span>) <span class="hljs-keyword">from</span> dual<br>结果：<span class="hljs-number">6</span><br><span class="hljs-keyword">select</span> length(<span class="hljs-string">&#x27;甲骨文&#x27;</span>) <span class="hljs-keyword">from</span> dual<br>结果：<span class="hljs-number">3</span><br><span class="hljs-keyword">select</span> lengthb(<span class="hljs-string">&#x27;甲骨文&#x27;</span>) <span class="hljs-keyword">from</span> dual<br>结果：<span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><ul><li><code>length()</code> ：返回的是 字符数</li><li><code>trim()</code> ：函数从字符串的开头，结尾或两端删除空格或指定的字符。</li><li><code>replace(char, search_string [, replace_string])</code>：) 如果没有指定replace_string 变量的值，那么当发现search_string 变量的值时，就将其删除</li><li><code>ascii(single_character)</code> ：返回代表指定字符的数字值代码</li><li><code>chr(number_code)</code> ：函数可以根据数字代码返回字符</li></ul><h2 id="3-对照表"><a href="#3-对照表" class="headerlink" title="3. 对照表"></a>3. 对照表</h2><p><strong>ASCII对照表</strong></p><table><thead><tr><th>ASCII值</th><th>控制字符</th><th>ASCII值</th><th>控制字符</th><th>ASCII值</th><th>控制字符</th><th>ASCII值</th><th>控制字符</th></tr></thead><tbody><tr><td>0</td><td>NUT</td><td>32</td><td>(space)</td><td>64</td><td>@</td><td>96</td><td>、</td></tr><tr><td>1</td><td>SOH</td><td>33</td><td>!</td><td>65</td><td>A</td><td>97</td><td>a</td></tr><tr><td>2</td><td>STX</td><td>34</td><td>“</td><td>66</td><td>B</td><td>98</td><td>b</td></tr><tr><td>3</td><td>ETX</td><td>35</td><td>#</td><td>67</td><td>C</td><td>99</td><td>c</td></tr><tr><td>4</td><td>EOT</td><td>36</td><td>$</td><td>68</td><td>D</td><td>100</td><td>d</td></tr><tr><td>5</td><td>ENQ</td><td>37</td><td>%</td><td>69</td><td>E</td><td>101</td><td>e</td></tr><tr><td>6</td><td>ACK</td><td>38</td><td>&amp;</td><td>70</td><td>F</td><td>102</td><td>f</td></tr><tr><td>7</td><td>BEL</td><td>39</td><td>,</td><td>71</td><td>G</td><td>103</td><td>g</td></tr><tr><td>8</td><td>BS</td><td>40</td><td>(</td><td>72</td><td>H</td><td>104</td><td>h</td></tr><tr><td>9</td><td>HT</td><td>41</td><td>)</td><td>73</td><td>I</td><td>105</td><td>i</td></tr><tr><td>10</td><td>LF</td><td>42</td><td>*</td><td>74</td><td>J</td><td>106</td><td>j</td></tr><tr><td>11</td><td>VT</td><td>43</td><td>+</td><td>75</td><td>K</td><td>107</td><td>k</td></tr><tr><td>12</td><td>FF</td><td>44</td><td>,</td><td>76</td><td>L</td><td>108</td><td>l</td></tr><tr><td>13</td><td>CR</td><td>45</td><td>-</td><td>77</td><td>M</td><td>109</td><td>m</td></tr><tr><td>14</td><td>SO</td><td>46</td><td>.</td><td>78</td><td>N</td><td>110</td><td>n</td></tr><tr><td>15</td><td>SI</td><td>47</td><td>&#x2F;</td><td>79</td><td>O</td><td>111</td><td>o</td></tr><tr><td>16</td><td>DLE</td><td>48</td><td>0</td><td>80</td><td>P</td><td>112</td><td>p</td></tr><tr><td>17</td><td>DCI</td><td>49</td><td>1</td><td>81</td><td>Q</td><td>113</td><td>q</td></tr><tr><td>18</td><td>DC2</td><td>50</td><td>2</td><td>82</td><td>R</td><td>114</td><td>r</td></tr><tr><td>19</td><td>DC3</td><td>51</td><td>3</td><td>83</td><td>S</td><td>115</td><td>s</td></tr><tr><td>20</td><td>DC4</td><td>52</td><td>4</td><td>84</td><td>T</td><td>116</td><td>t</td></tr><tr><td>21</td><td>NAK</td><td>53</td><td>5</td><td>85</td><td>U</td><td>117</td><td>u</td></tr><tr><td>22</td><td>SYN</td><td>54</td><td>6</td><td>86</td><td>V</td><td>118</td><td>v</td></tr><tr><td>23</td><td>TB</td><td>55</td><td>7</td><td>87</td><td>W</td><td>119</td><td>w</td></tr><tr><td>24</td><td>CAN</td><td>56</td><td>8</td><td>88</td><td>X</td><td>120</td><td>x</td></tr><tr><td>25</td><td>EM</td><td>57</td><td>9</td><td>89</td><td>Y</td><td>121</td><td>y</td></tr><tr><td>26</td><td>SUB</td><td>58</td><td>:</td><td>90</td><td>Z</td><td>122</td><td>z</td></tr><tr><td>27</td><td>ESC</td><td>59</td><td>;</td><td>91</td><td>[</td><td>123</td><td>{</td></tr><tr><td>28</td><td>FS</td><td>60</td><td>&lt;</td><td>92</td><td>&#x2F;</td><td>124</td><td></td></tr><tr><td>29</td><td>GS</td><td>61</td><td>&#x3D;</td><td>93</td><td>]</td><td>125</td><td>}</td></tr><tr><td>30</td><td>RS</td><td>62</td><td>&gt;</td><td>94</td><td>^</td><td>126</td><td>&#96;</td></tr><tr><td>31</td><td>US</td><td>63</td><td>?</td><td>95</td><td>_</td><td>127</td><td>DEL</td></tr></tbody></table><p><strong>特殊字符解释</strong></p><table><thead><tr><th>NUL空</th><th>VT 垂直制表</th><th>SYN 空转同步</th></tr></thead><tbody><tr><td>STX 正文开始</td><td>CR 回车</td><td>CAN 作废</td></tr><tr><td>ETX 正文结束</td><td>SO 移位输出</td><td>EM 纸尽</td></tr><tr><td>EOY 传输结束</td><td>SI 移位输入</td><td>SUB 换置</td></tr><tr><td>ENQ 询问字符</td><td>DLE 空格</td><td>ESC 换码</td></tr><tr><td>ACK 承认</td><td>DC1 设备控制1</td><td>FS 文字分隔符</td></tr><tr><td>BEL 报警</td><td>DC2 设备控制2</td><td>GS 组分隔符</td></tr><tr><td>BS 退一格</td><td>DC3 设备控制3</td><td>RS 记录分隔符</td></tr><tr><td>HT 横向列表</td><td>DC4 设备控制4</td><td>US 单元分隔符</td></tr><tr><td>LF 换行</td><td>NAK 否定</td><td>DEL 删除</td></tr></tbody></table><p><strong>Oracle字段类型</strong></p><table><thead><tr><th>CODE</th><th>Type</th></tr></thead><tbody><tr><td>1</td><td>VARCHAR2</td></tr><tr><td>2</td><td>NUMBER</td></tr><tr><td>8</td><td>LONG</td></tr><tr><td>12</td><td>DATE</td></tr><tr><td>23</td><td>RAW</td></tr><tr><td>24</td><td>LONG RAW</td></tr><tr><td>69</td><td>ROWID</td></tr><tr><td>96</td><td>CHAR</td></tr><tr><td>112</td><td>CLOB</td></tr><tr><td>113</td><td>BLOB</td></tr><tr><td>114</td><td>BFILE</td></tr><tr><td>180</td><td>TIMESTAMP</td></tr><tr><td>181</td><td>TIMESTAMP WITH TIMEZONE</td></tr><tr><td>182</td><td>INTERVAL YEAR TO MONTH</td></tr><tr><td>183</td><td>INTERVAL DAY TO SECOND</td></tr><tr><td>208</td><td>UROWID</td></tr><tr><td>231</td><td>TIMESTAMP WITH LOCAL TIMEZONE</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">Oracle处理字段中含有不可见字符</summary>
    
    
    
    <category term="DataBase" scheme="https://blog.dekun.wang/categories/DataBase/"/>
    
    <category term="Oracle" scheme="https://blog.dekun.wang/categories/DataBase/Oracle/"/>
    
    
    <category term="Oracle" scheme="https://blog.dekun.wang/tags/Oracle/"/>
    
    <category term="不可见字符" scheme="https://blog.dekun.wang/tags/%E4%B8%8D%E5%8F%AF%E8%A7%81%E5%AD%97%E7%AC%A6/"/>
    
  </entry>
  
</feed>
